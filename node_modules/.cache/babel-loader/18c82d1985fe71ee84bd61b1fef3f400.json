{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    timers,\n    workoutIsRunning,\n    setWorkoutIsRunning,\n    currentTimerId,\n    setCurrentTimerId,\n    setWorkoutIsComplete\n  } = useContext(AppContext);\n  const {\n    id,\n    inputHours,\n    inputMinutes,\n    inputSeconds\n  } = props;\n  const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n  const [isRunning, setIsRunning] = useState(workoutIsRunning);\n  useEffect(() => {\n    let i;\n\n    if (isRunning && currentTimerId === id) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        clearInterval(i);\n        setIsRunning(false);\n\n        if (id < timers.length) {\n          setCurrentTimerId(currentTimerId + 1);\n        }\n      }\n    }\n\n    return () => {\n      clearInterval(i);\n\n      if (id === timers.length) {\n        setWorkoutIsComplete(true);\n      }\n    };\n  }, [time, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]);\n  const displayTime = id === currentTimerId ? translateFromSeconds(time) : '0';\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: displayTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countdown, \"n2gbiOD7pneoiyMqsFrhl2ovmVA=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","useContext","AppContext","Counter","translateFromSeconds","translateToSeconds","Countdown","props","timers","workoutIsRunning","setWorkoutIsRunning","currentTimerId","setCurrentTimerId","setWorkoutIsComplete","id","inputHours","inputMinutes","inputSeconds","time","setTime","isRunning","setIsRunning","i","setInterval","clearInterval","length","displayTime"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst Countdown = ({props}) => {\n\n    const { timers, workoutIsRunning, setWorkoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    const [isRunning, setIsRunning] = useState(workoutIsRunning);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning && currentTimerId === id) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                clearInterval(i);\n                setIsRunning(false);\n                if (id < timers.length) {\n                    setCurrentTimerId(currentTimerId + 1);\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(i);\n            if (id === timers.length) {\n                setWorkoutIsComplete(true);\n            }\n        }\n\n    }, [time, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]);\n\n    const displayTime = (id === currentTimerId) ? translateFromSeconds(time) : '0';\n\n    return (\n\n        <Counter>{displayTime}</Counter>\n    );\n\n};\n\nexport default Countdown;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;AAEA,MAAMC,SAAS,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE3B,MAAM;IAAEC,MAAF;IAAUC,gBAAV;IAA4BC,mBAA5B;IAAiDC,cAAjD;IAAiEC,iBAAjE;IAAoFC;EAApF,IAA6GZ,UAAU,CAACC,UAAD,CAA7H;EACA,MAAM;IAAEY,EAAF;IAAMC,UAAN;IAAkBC,YAAlB;IAAgCC;EAAhC,IAAiDV,KAAvD;EAEA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACK,kBAAkB,CAACU,UAAD,EAAaC,YAAb,EAA2BC,YAA3B,CAAnB,CAAhC;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAACS,gBAAD,CAA1C;EAEAV,SAAS,CAAC,MAAM;IAEZ,IAAIuB,CAAJ;;IAEA,IAAIF,SAAS,IAAIT,cAAc,KAAKG,EAApC,EAAwC;MACpCQ,CAAC,GAAGC,WAAW,CAAC,MAAM;QAClBJ,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACZM,aAAa,CAACF,CAAD,CAAb;QACAD,YAAY,CAAC,KAAD,CAAZ;;QACA,IAAIP,EAAE,GAAGN,MAAM,CAACiB,MAAhB,EAAwB;UACpBb,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;QACH;MACJ;IACJ;;IAED,OAAO,MAAM;MACTa,aAAa,CAACF,CAAD,CAAb;;MACA,IAAIR,EAAE,KAAKN,MAAM,CAACiB,MAAlB,EAA0B;QACtBZ,oBAAoB,CAAC,IAAD,CAApB;MACH;IACJ,CALD;EAOH,CAxBQ,EAwBN,CAACK,IAAD,EAAOE,SAAP,EAAkBT,cAAlB,EAAkCG,EAAlC,EAAsCF,iBAAtC,EAAyDJ,MAAzD,EAAiEK,oBAAjE,CAxBM,CAAT;EA0BA,MAAMa,WAAW,GAAIZ,EAAE,KAAKH,cAAR,GAA0BP,oBAAoB,CAACc,IAAD,CAA9C,GAAuD,GAA3E;EAEA,oBAEI,QAAC,OAAD;IAAA,UAAUQ;EAAV;IAAA;IAAA;IAAA;EAAA,QAFJ;AAKH,CAzCD;;GAAMpB,S;;KAAAA,S;AA2CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}