{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst XY = props => {\n  _s();\n\n  // States for countdown\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(0);\n  const [inputMinutes, setInputMinutes] = useState(0);\n  const [inputSeconds, setInputSeconds] = useState(0);\n  const [inputTime, setInputTime] = useState(0); // States for rounds\n\n  const [round, setRound] = useState(1);\n  const [counterRound, setCounterRound] = useState(1);\n  const [inputRounds, setInputRounds] = useState(1);\n\n  const handleClick = value => {\n    switch (value) {\n      case 'Start':\n        setIsRunning(true);\n        setIsComplete(false);\n        break;\n\n      case 'Pause':\n        setIsRunning(false);\n        break;\n\n      case 'Resume':\n        setIsRunning(true);\n        break;\n\n      case 'Fast Forward':\n        setTime(0);\n        setIsRunning(false);\n        setIsComplete(true);\n        setRound(inputRounds);\n        setCounterRound(inputRounds);\n        break;\n\n      case 'Reset':\n        setTime(inputTime);\n        setIsComplete(true);\n        setIsRunning(false);\n        setRound(inputRounds);\n        setCounterRound(1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const makeInput = _ref => {\n    let {\n      state,\n      setter,\n      relatedSetter,\n      label\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      label: label,\n      value: state,\n      onChange: e => {\n        if (e.target.value) {\n          setter(parseInt(e.target.value));\n          relatedSetter && relatedSetter(parseInt(e.target.value));\n        } else {\n          setter(0);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }; // const makeButton = ({value, disabledValue}) => {\n  //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n  // };\n\n\n  useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n  useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n  useEffect(() => {\n    let i;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        if (round === 1) {\n          clearInterval(i);\n          setIsRunning(false);\n        } else {\n          setTime(inputTime);\n          setRound(round - 1);\n          setCounterRound(counterRound + 1);\n        }\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, inputTime, isRunning, round, counterRound]);\n\n  if (props.type === 'queued') {\n    return /*#__PURE__*/_jsxDEV(Counter, {\n      children: translateFromSeconds(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"0 0 10px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"135px\",\n            textAlign: \"right\"\n          },\n          children: \"Set workout time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), makeInput({\n          state: inputHours,\n          setter: setInputHours,\n          relatedSetter: setTime,\n          label: \"H\"\n        }), makeInput({\n          state: inputMinutes,\n          setter: setInputMinutes,\n          relatedSetter: setTime,\n          label: \"M\"\n        }), makeInput({\n          state: inputSeconds,\n          setter: setInputSeconds,\n          relatedSetter: setTime,\n          label: \"S\"\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"0 0 10px\"\n        },\n        children: [\"Set number of rounds: \", makeInput(inputRounds, setInputRounds, setRound, \"R\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //         <>\n  //             <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {counterRound} of {inputRounds}</div>\n  //             <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n  //                 {makeButton({\n  //                     value: \"Start\",\n  //                     disabledValue: !isComplete || (time === 0)\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Pause\",\n  //                     disabledValue: !isRunning\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Resume\",\n  //                     disabledValue: isRunning || isComplete || (time === 0)\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Fast Forward\",\n  //                     disabledValue: isComplete || (time === 0)\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Reset\",\n  //                     disabledValue: isComplete && (time === inputTime)\n  //                 })}\n  //             </div>\n  //         </>\n  // );\n\n};\n\n_s(XY, \"uTOu3rofVvJMKmOhl9V8D84itBw=\", false, function () {\n  return [useTimeSetter, useTimeSetter];\n});\n\n_c = XY;\nexport default XY;\n\nvar _c;\n\n$RefreshReg$(_c, \"XY\");","map":{"version":3,"names":["useEffect","useState","Input","Counter","translateFromSeconds","useTimeSetter","XY","props","isRunning","setIsRunning","isComplete","setIsComplete","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","round","setRound","counterRound","setCounterRound","inputRounds","setInputRounds","handleClick","value","makeInput","state","setter","relatedSetter","label","e","target","parseInt","i","setInterval","clearInterval","type","textAlign","margin","display","justifyContent","alignItems","width"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\n\nconst XY = props => {\n\n    // States for countdown\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(0);\n    const [inputMinutes, setInputMinutes] = useState(0);\n    const [inputSeconds, setInputSeconds] = useState(0);\n    const [inputTime, setInputTime] = useState(0);\n    // States for rounds\n    const [round, setRound] = useState(1);\n    const [counterRound, setCounterRound] = useState(1);\n    const [inputRounds, setInputRounds] = useState(1);\n\n    const handleClick = value => {\n        switch(value) {\n            case 'Start':\n                setIsRunning(true);\n                setIsComplete(false);\n                break;\n            case 'Pause':\n                setIsRunning(false);\n                break;\n            case 'Resume':\n                setIsRunning(true);\n                break;\n            case 'Fast Forward':\n                setTime(0);\n                setIsRunning(false);\n                setIsComplete(true);\n                setRound(inputRounds);\n                setCounterRound(inputRounds);\n                break;\n            case 'Reset':\n                setTime(inputTime);\n                setIsComplete(true);\n                setIsRunning(false);\n                setRound(inputRounds);\n                setCounterRound(1);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const makeInput = ({state, setter, relatedSetter, label}) => {\n        return <Input label={label} value={state} onChange={e => {\n            if (e.target.value) {\n                setter(parseInt(e.target.value));\n                relatedSetter && relatedSetter(parseInt(e.target.value));\n            } else {\n                setter(0);\n            }\n        }} />\n    };\n\n    // const makeButton = ({value, disabledValue}) => {\n    //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n    // };\n\n    useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n    useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                if (round === 1) {\n                    clearInterval(i);\n                    setIsRunning(false);\n                } else {\n                    setTime(inputTime);\n                    setRound(round - 1);\n                    setCounterRound(counterRound + 1);\n                }\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, inputTime, isRunning, round, counterRound ]);\n\n    if (props.type === 'queued') {\n        return <Counter>{translateFromSeconds(time)}</Counter>\n    } else {\n        return (\n            <div style={{ textAlign: \"center\",}}>\n                <div style={{ margin: \"0 0 10px\",display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                    <div style={{ width: \"135px\", textAlign: \"right\"}}>Set workout time:</div>\n                    {makeInput({\n                        state: inputHours, \n                        setter: setInputHours,\n                        relatedSetter: setTime,\n                        label: \"H\"\n                    })}\n                    {makeInput({\n                        state: inputMinutes, \n                        setter: setInputMinutes,\n                        relatedSetter: setTime,\n                        label: \"M\"\n                    })}\n                    {makeInput({\n                        state: inputSeconds, \n                        setter: setInputSeconds,\n                        relatedSetter: setTime,\n                        label: \"S\"\n                    })}\n                </div>\n                <div style={{ margin: \"0 0 10px\",}}>Set number of rounds: {makeInput(inputRounds, setInputRounds, setRound, \"R\")}</div>\n            </div>\n        );\n    }\n\n    // return (\n    //         <>\n    //             <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {counterRound} of {inputRounds}</div>\n    //             <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n    //                 {makeButton({\n    //                     value: \"Start\",\n    //                     disabledValue: !isComplete || (time === 0)\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Pause\",\n    //                     disabledValue: !isRunning\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Resume\",\n    //                     disabledValue: isRunning || isComplete || (time === 0)\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Fast Forward\",\n    //                     disabledValue: isComplete || (time === 0)\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Reset\",\n    //                     disabledValue: isComplete && (time === inputTime)\n    //                 })}\n    //             </div>\n    //         </>\n    // );\n};\n\nexport default XY;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}