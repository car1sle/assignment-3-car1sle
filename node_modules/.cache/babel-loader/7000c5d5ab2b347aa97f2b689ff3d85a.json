{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport Counter from '../generic/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst XY = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    index,\n    workoutRoundDuration,\n    currentDuration,\n    progress,\n    status,\n    rounds\n  } = props;\n  const {\n    removeTimer\n  } = useContext(AppContext);\n  const [currentRound, setCurrentRound] = useState(1);\n  let progressVal;\n\n  if (status === 'Current') {\n    if (workoutRoundDuration * currentRound === progress) {\n      setCurrentRound(currentRound + 1);\n    }\n\n    progressVal = translateFromSeconds(currentDuration - progress);\n  } else {\n    progressVal = status;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Counter, {\n      label: \"Workout duration\",\n      duration: translateFromSeconds(workoutRoundDuration * rounds),\n      progress: progressVal,\n      removeClick: () => removeTimer(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(XY, \"prNFfHvcCLbj6+aYlE1pDAH9qH0=\");\n\n_c = XY;\nexport default XY;\n\nvar _c;\n\n$RefreshReg$(_c, \"XY\");","map":{"version":3,"names":["useContext","useState","AppContext","translateFromSeconds","Counter","XY","props","index","workoutRoundDuration","currentDuration","progress","status","rounds","removeTimer","currentRound","setCurrentRound","progressVal"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport Counter from '../generic/Counter';\n\nconst XY = ({ props }) => {\n\n    const { index, workoutRoundDuration, currentDuration, progress, status, rounds } = props;\n    const { removeTimer } = useContext(AppContext);\n    const [currentRound, setCurrentRound] = useState(1);\n\n    let progressVal;\n\n    if (status === 'Current') {\n        if (workoutRoundDuration * currentRound === progress) {\n            setCurrentRound(currentRound + 1);\n        }\n        progressVal = translateFromSeconds(currentDuration - progress);\n    } else {\n        progressVal = status;\n    }\n\n    return (\n        <>\n            <Counter label=\"Workout duration\" duration={translateFromSeconds(workoutRoundDuration * rounds)} progress={progressVal} removeClick={() => removeTimer(index)} />\n            {/* {active && <div style={{ fontStyle: \"italic\",}}>Round {currentRound} of {rounds}</div>} */}\n        </>\n    );\n\n};\n\nexport default XY;"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAEA,MAAMC,EAAE,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAEtB,MAAM;IAAEC,KAAF;IAASC,oBAAT;IAA+BC,eAA/B;IAAgDC,QAAhD;IAA0DC,MAA1D;IAAkEC;EAAlE,IAA6EN,KAAnF;EACA,MAAM;IAAEO;EAAF,IAAkBb,UAAU,CAACE,UAAD,CAAlC;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD;EAEA,IAAIe,WAAJ;;EAEA,IAAIL,MAAM,KAAK,SAAf,EAA0B;IACtB,IAAIH,oBAAoB,GAAGM,YAAvB,KAAwCJ,QAA5C,EAAsD;MAClDK,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;IACH;;IACDE,WAAW,GAAGb,oBAAoB,CAACM,eAAe,GAAGC,QAAnB,CAAlC;EACH,CALD,MAKO;IACHM,WAAW,GAAGL,MAAd;EACH;;EAED,oBACI;IAAA,uBACI,QAAC,OAAD;MAAS,KAAK,EAAC,kBAAf;MAAkC,QAAQ,EAAER,oBAAoB,CAACK,oBAAoB,GAAGI,MAAxB,CAAhE;MAAiG,QAAQ,EAAEI,WAA3G;MAAwH,WAAW,EAAE,MAAMH,WAAW,CAACN,KAAD;IAAtJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAOH,CAxBD;;GAAMF,E;;KAAAA,E;AA0BN,eAAeA,EAAf"},"metadata":{},"sourceType":"module"}