{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = props => {\n  _s();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [inputIsDisabled, setInputIsDisabled] = useState(false);\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(0);\n  const [inputMinutes, setInputMinutes] = useState(0);\n  const [inputSeconds, setInputSeconds] = useState(0);\n  const [inputTime, setInputTime] = useState(0);\n\n  const handleClick = value => {\n    switch (value) {\n      case 'Start':\n        setIsRunning(true);\n        setIsComplete(false);\n        setInputIsDisabled(true);\n        break;\n\n      case 'Pause':\n        setIsRunning(false);\n        break;\n\n      case 'Resume':\n        setIsRunning(true);\n        break;\n\n      case 'Fast Forward':\n        setTime(0);\n        setIsComplete(true);\n        setInputIsDisabled(false);\n        break;\n\n      case 'Reset':\n        setTime(inputTime);\n        setIsComplete(true);\n        setIsRunning(false);\n        setInputIsDisabled(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const makeInput = (state, setter, label) => {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      label: label,\n      value: state,\n      disabledValue: inputIsDisabled,\n      onChange: e => {\n        if (e.target.value) {\n          setter(parseInt(e.target.value));\n          setTime(parseInt(e.target.value));\n        } else {\n          setter(0);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }; // const makeButton = ({value, disabledValue}) => {\n  //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n  // };\n\n\n  useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n  useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n  useEffect(() => {\n    let i;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        clearInterval(i);\n        setIsRunning(false);\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, inputTime, isRunning]);\n\n  if (props.type === 'queued') {\n    return /*#__PURE__*/_jsxDEV(Counter, {\n      children: translateFromSeconds(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"0 0 10px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"135px\",\n            textAlign: \"right\"\n          },\n          children: \"Set workout time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), makeInput({\n          state: inputHours,\n          setter: setInputHours,\n          label: \"H\"\n        }), makeInput({\n          state: inputMinutes,\n          setter: setInputMinutes,\n          label: \"M\"\n        }), makeInput({\n          state: inputSeconds,\n          setter: setInputSeconds,\n          label: \"S\"\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //     <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n  //         {makeButton({\n  //             value: \"Start\",\n  //             disabledValue: !isComplete || (time !== inputTime)\n  //         })}\n  //         {makeButton({\n  //             value: \"Pause\",\n  //             disabledValue: !isRunning\n  //         })}\n  //         {makeButton({\n  //             value: \"Resume\",\n  //             disabledValue: isRunning || isComplete || (time === 0)\n  //         })}\n  //         {makeButton({\n  //             value: \"Fast Forward\",\n  //             disabledValue: isComplete || (time === 0)\n  //         })}\n  //         {makeButton({\n  //             value: \"Reset\",\n  //             disabledValue: isComplete && (time === inputTime)\n  //         })}\n  //     </div>\n  // );\n\n};\n\n_s(Countdown, \"Bt2zQOZyEgvomWpyV94KlzcTL2M=\", false, function () {\n  return [useTimeSetter, useTimeSetter];\n});\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","Input","Counter","translateFromSeconds","useTimeSetter","Countdown","props","isRunning","setIsRunning","isComplete","setIsComplete","inputIsDisabled","setInputIsDisabled","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","handleClick","value","makeInput","state","setter","label","e","target","parseInt","i","setInterval","clearInterval","type","textAlign","margin","display","justifyContent","alignItems","width"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\n\nconst Countdown = props => {\n\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [inputIsDisabled, setInputIsDisabled] = useState(false);\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(0);\n    const [inputMinutes, setInputMinutes] = useState(0);\n    const [inputSeconds, setInputSeconds] = useState(0);\n    const [inputTime, setInputTime] = useState(0);\n\n    const handleClick = value => {\n        switch(value) {\n            case 'Start':\n                setIsRunning(true);\n                setIsComplete(false);\n                setInputIsDisabled(true);\n                break;\n            case 'Pause':\n                setIsRunning(false);\n                break;\n            case 'Resume':\n                setIsRunning(true);\n                break;\n            case 'Fast Forward':\n                setTime(0);\n                setIsComplete(true);\n                setInputIsDisabled(false);\n                break;\n            case 'Reset':\n                setTime(inputTime);\n                setIsComplete(true);\n                setIsRunning(false);\n                setInputIsDisabled(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const makeInput = (state, setter, label) => {\n        return <Input label={label} value={state} disabledValue={inputIsDisabled} onChange={e => {\n            if (e.target.value) {\n                setter(parseInt(e.target.value));\n                setTime(parseInt(e.target.value));\n            } else {\n                setter(0);\n            }\n        }} />\n    };\n\n    // const makeButton = ({value, disabledValue}) => {\n    //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n    // };\n\n    useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n    useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                clearInterval(i);\n                setIsRunning(false);\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, inputTime, isRunning]);\n\n    if (props.type === 'queued') {\n        return <Counter>{translateFromSeconds(time)}</Counter>\n    } else {\n        return (\n            <div style={{ textAlign: \"center\",}}>\n                <div style={{ margin: \"0 0 10px\",display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                    <div style={{ width: \"135px\", textAlign: \"right\"}}>Set workout time:</div>\n                    {makeInput({\n                        state: inputHours, \n                        setter: setInputHours,\n                        label: \"H\"\n                    })}\n                    {makeInput({\n                        state: inputMinutes, \n                        setter: setInputMinutes,\n                        label: \"M\"\n                    })}\n                    {makeInput({\n                        state: inputSeconds, \n                        setter: setInputSeconds,\n                        label: \"S\"\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n    // return (\n    //     <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n    //         {makeButton({\n    //             value: \"Start\",\n    //             disabledValue: !isComplete || (time !== inputTime)\n    //         })}\n    //         {makeButton({\n    //             value: \"Pause\",\n    //             disabledValue: !isRunning\n    //         })}\n    //         {makeButton({\n    //             value: \"Resume\",\n    //             disabledValue: isRunning || isComplete || (time === 0)\n    //         })}\n    //         {makeButton({\n    //             value: \"Fast Forward\",\n    //             disabledValue: isComplete || (time === 0)\n    //         })}\n    //         {makeButton({\n    //             value: \"Reset\",\n    //             disabledValue: isComplete && (time === inputTime)\n    //         })}\n    //     </div>\n    // );\n};\n\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module"}