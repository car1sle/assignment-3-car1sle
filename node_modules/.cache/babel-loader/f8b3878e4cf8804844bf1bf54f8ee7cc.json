{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Button from '../generic/Button';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stopwatch = type => {\n  _s();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [inputIsDisabled, setInputIsDisabled] = useState(false);\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(0);\n  const [inputMinutes, setInputMinutes] = useState(0);\n  const [inputSeconds, setInputSeconds] = useState(0);\n  const [inputTime, setInputTime] = useState(0);\n\n  const handleClick = value => {\n    switch (value) {\n      case 'Start':\n        setIsRunning(true);\n        setIsComplete(false);\n        setInputIsDisabled(true);\n        break;\n\n      case 'Pause':\n        setIsRunning(false);\n        break;\n\n      case 'Resume':\n        setIsRunning(true);\n        break;\n\n      case 'Fast Forward':\n        setTime(inputTime);\n        setIsComplete(true);\n        setInputIsDisabled(false);\n        break;\n\n      case 'Reset':\n        setTime(0);\n        setIsComplete(true);\n        setIsRunning(false);\n        setInputIsDisabled(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const makeInput = (state, setter, label) => {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      label: label,\n      value: state,\n      disabledValue: inputIsDisabled,\n      onChange: e => {\n        e.target.value ? setter(parseInt(e.target.value)) : setter(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  };\n\n  const makeButton = _ref => {\n    let {\n      value,\n      disabledValue\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      value: value,\n      disabledValue: inputTime ? disabledValue : true,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  };\n\n  useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n  useEffect(() => {\n    let i;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time + 1);\n      }, 1000);\n\n      if (time >= inputTime) {\n        clearInterval(i);\n        setIsRunning(false);\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, inputTime, isRunning]);\n  {\n    type === 'queued' && `Hello ${loggedUser.name}`;\n  }\n\n  if (type === 'queued') {\n    return /*#__PURE__*/_jsxDEV(Counter, {\n      children: translateFromSeconds(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0 0 10px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"135px\",\n          textAlign: \"right\"\n        },\n        children: \"Set workout time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), makeInput(inputHours, setInputHours, \"H\"), makeInput(inputMinutes, setInputMinutes, \"M\"), makeInput(inputSeconds, setInputSeconds, \"S\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //     <div style={{ textAlign: \"center\",}}>\n  //         <Counter>{translateFromSeconds(time)}</Counter>\n  //         <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n  //             {makeButton({\n  //                 value: \"Start\",\n  //                 disabledValue: !isComplete || (time === inputTime)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Pause\",\n  //                 disabledValue: !isRunning || (time === inputTime)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Resume\",\n  //                 disabledValue: isRunning || isComplete || (time === inputTime)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Fast Forward\",\n  //                 disabledValue: isComplete || (time === inputTime)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Reset\",\n  //                 disabledValue: isComplete && (time !== inputTime)\n  //             })}\n  //         </div>\n  //     </div>\n  // );\n\n};\n\n_s(Stopwatch, \"Ynvka9SRlqhq/wZ4y69LKZ1my0E=\", false, function () {\n  return [useTimeSetter];\n});\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useEffect","useState","Button","Input","Counter","translateFromSeconds","useTimeSetter","Stopwatch","type","isRunning","setIsRunning","isComplete","setIsComplete","inputIsDisabled","setInputIsDisabled","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","handleClick","value","makeInput","state","setter","label","e","target","parseInt","makeButton","disabledValue","i","setInterval","clearInterval","loggedUser","name","margin","display","justifyContent","alignItems","width","textAlign"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Button from '../generic/Button';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\n\nconst Stopwatch = type => {\n\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [inputIsDisabled, setInputIsDisabled] = useState(false);\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(0);\n    const [inputMinutes, setInputMinutes] = useState(0);\n    const [inputSeconds, setInputSeconds] = useState(0);\n    const [inputTime, setInputTime] = useState(0);\n\n    const handleClick = value => {\n        switch(value) {\n            case 'Start':\n                setIsRunning(true);\n                setIsComplete(false);\n                setInputIsDisabled(true);\n                break;\n            case 'Pause':\n                setIsRunning(false);\n                break;\n            case 'Resume':\n                setIsRunning(true);\n                break;\n            case 'Fast Forward':\n                setTime(inputTime);\n                setIsComplete(true);\n                setInputIsDisabled(false);\n                break;\n            case 'Reset':\n                setTime(0);\n                setIsComplete(true);\n                setIsRunning(false);\n                setInputIsDisabled(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const makeInput = (state, setter, label) => {\n        return <Input label={label} value={state} disabledValue={inputIsDisabled} onChange={e => {\n            e.target.value ? setter(parseInt(e.target.value)) : setter(0);\n        }} />\n    };\n\n    const makeButton = ({value, disabledValue}) => {\n        return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n    };\n\n    useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time + 1);\n            }, 1000);\n            if (time >= inputTime) {\n                clearInterval(i);\n                setIsRunning(false);\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, inputTime, isRunning]);\n\n    {type === 'queued' && `Hello ${loggedUser.name}`}\n\n    if (type === 'queued') {\n        return <Counter>{translateFromSeconds(time)}</Counter>\n    } else {\n        return (\n            <div style={{ margin: \"0 0 10px\",display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                <div style={{ width: \"135px\", textAlign: \"right\"}}>Set workout time:</div>\n                {makeInput(inputHours, setInputHours, \"H\")}\n                {makeInput(inputMinutes, setInputMinutes, \"M\")}\n                {makeInput(inputSeconds, setInputSeconds, \"S\")}\n            </div>\n        );\n    }\n    \n    // return (\n    //     <div style={{ textAlign: \"center\",}}>\n    //         <Counter>{translateFromSeconds(time)}</Counter>\n    //         <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n    //             {makeButton({\n    //                 value: \"Start\",\n    //                 disabledValue: !isComplete || (time === inputTime)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Pause\",\n    //                 disabledValue: !isRunning || (time === inputTime)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Resume\",\n    //                 disabledValue: isRunning || isComplete || (time === inputTime)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Fast Forward\",\n    //                 disabledValue: isComplete || (time === inputTime)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Reset\",\n    //                 disabledValue: isComplete && (time !== inputTime)\n    //             })}\n    //         </div>\n    //     </div>\n    // );\n};\n\nexport default Stopwatch;"],"mappings":"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"},"metadata":{},"sourceType":"module"}