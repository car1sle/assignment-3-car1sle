{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    timers,\n    workoutIsRunning,\n    setWorkoutIsRunning,\n    currentTimerId,\n    setCurrentTimerId,\n    setWorkoutIsComplete\n  } = useContext(AppContext);\n  const {\n    id,\n    inputHours,\n    inputMinutes,\n    inputSeconds\n  } = props;\n  const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n  const timeRef = useRef(0);\n  timeRef.current = time;\n  useEffect(() => {\n    let i;\n\n    if (workoutIsRunning && currentTimerId === id) {\n      i = setInterval(() => {\n        setTime(timeRef - 1);\n      }, 1000);\n\n      if (timeRef === 0) {\n        clearInterval(i);\n\n        if (id === timers.length) {\n          setWorkoutIsRunning(false);\n          setWorkoutIsComplete(true);\n        } else {\n          setCurrentTimerId(currentTimerId + 1);\n        }\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [timeRef, workoutIsRunning, currentTimerId, id, setCurrentTimerId, setWorkoutIsComplete, setWorkoutIsRunning, timers]);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: translateFromSeconds(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countdown, \"EoRVnviFo+iPG0MAWOKL5aliNiY=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","useContext","useRef","AppContext","Counter","translateFromSeconds","translateToSeconds","Countdown","props","timers","workoutIsRunning","setWorkoutIsRunning","currentTimerId","setCurrentTimerId","setWorkoutIsComplete","id","inputHours","inputMinutes","inputSeconds","time","setTime","timeRef","current","i","setInterval","clearInterval","length"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst Countdown = ({props}) => {\n\n    const { timers, workoutIsRunning, setWorkoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    const timeRef= useRef(0);\n    timeRef.current = time;\n\n    useEffect(() => {\n\n        let i;\n\n        if (workoutIsRunning && currentTimerId === id) {\n            i = setInterval(() => {\n                setTime(timeRef - 1);\n            }, 1000);\n            if (timeRef === 0) {\n                clearInterval(i);\n                if (id === timers.length) {\n                    setWorkoutIsRunning(false);\n                    setWorkoutIsComplete(true);\n                } else {\n                    setCurrentTimerId(currentTimerId + 1);\n                }\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [timeRef, workoutIsRunning, currentTimerId, id, setCurrentTimerId, setWorkoutIsComplete, setWorkoutIsRunning, timers]);\n\n    return (\n        <Counter>{translateFromSeconds(time)}</Counter>\n    );\n\n};\n\nexport default Countdown;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;AAEA,MAAMC,SAAS,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE3B,MAAM;IAAEC,MAAF;IAAUC,gBAAV;IAA4BC,mBAA5B;IAAiDC,cAAjD;IAAiEC,iBAAjE;IAAoFC;EAApF,IAA6Gb,UAAU,CAACE,UAAD,CAA7H;EACA,MAAM;IAAEY,EAAF;IAAMC,UAAN;IAAkBC,YAAlB;IAAgCC;EAAhC,IAAiDV,KAAvD;EAEA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAACM,kBAAkB,CAACU,UAAD,EAAaC,YAAb,EAA2BC,YAA3B,CAAnB,CAAhC;EACA,MAAMG,OAAO,GAAEnB,MAAM,CAAC,CAAD,CAArB;EACAmB,OAAO,CAACC,OAAR,GAAkBH,IAAlB;EAEApB,SAAS,CAAC,MAAM;IAEZ,IAAIwB,CAAJ;;IAEA,IAAIb,gBAAgB,IAAIE,cAAc,KAAKG,EAA3C,EAA+C;MAC3CQ,CAAC,GAAGC,WAAW,CAAC,MAAM;QAClBJ,OAAO,CAACC,OAAO,GAAG,CAAX,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,OAAO,KAAK,CAAhB,EAAmB;QACfI,aAAa,CAACF,CAAD,CAAb;;QACA,IAAIR,EAAE,KAAKN,MAAM,CAACiB,MAAlB,EAA0B;UACtBf,mBAAmB,CAAC,KAAD,CAAnB;UACAG,oBAAoB,CAAC,IAAD,CAApB;QACH,CAHD,MAGO;UACHD,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;QACH;MACJ;IACJ;;IAED,OAAO,MAAMa,aAAa,CAACF,CAAD,CAA1B;EAEH,CArBQ,EAqBN,CAACF,OAAD,EAAUX,gBAAV,EAA4BE,cAA5B,EAA4CG,EAA5C,EAAgDF,iBAAhD,EAAmEC,oBAAnE,EAAyFH,mBAAzF,EAA8GF,MAA9G,CArBM,CAAT;EAuBA,oBACI,QAAC,OAAD;IAAA,UAAUJ,oBAAoB,CAACc,IAAD;EAA9B;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CApCD;;GAAMZ,S;;KAAAA,S;AAsCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}