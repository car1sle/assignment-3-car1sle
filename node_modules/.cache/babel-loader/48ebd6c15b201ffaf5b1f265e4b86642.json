{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stopwatch = timer => {\n  _s();\n\n  const {\n    setcurrentTimerId,\n    isRunningMain\n  } = useContext(AppContext);\n  const timerId = timer.id;\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(timer.inputHours);\n  const [inputMinutes, setInputMinutes] = useState(timer.inputMinutes);\n  const [inputSeconds, setInputSeconds] = useState(timer.inputSeconds);\n  const [inputTime, setInputTime] = useState(0);\n  useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n\n  const handleClick = value => {\n    switch (value) {\n      case 'Start':\n        setIsRunning(true);\n        setIsComplete(false);\n        break;\n\n      case 'Pause':\n        setIsRunning(false);\n        break;\n\n      case 'Resume':\n        setIsRunning(true);\n        break;\n\n      case 'Fast Forward':\n        setTime(inputTime);\n        setIsComplete(true);\n        break;\n\n      case 'Reset':\n        setTime(0);\n        setIsComplete(true);\n        setIsRunning(false);\n        break;\n\n      default:\n        break;\n    }\n  }; // const makeButton = ({value, disabledValue}) => {\n  //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n  // };\n\n\n  useEffect(() => {\n    let i;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time + 1);\n      }, 1000);\n\n      if (time >= inputTime) {\n        clearInterval(i);\n        setIsRunning(false);\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, inputTime, isRunning]);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: translateFromSeconds(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this); // return (\n  //     <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n  //         {makeButton({\n  //             value: \"Start\",\n  //             disabledValue: !isComplete || (time === inputTime)\n  //         })}\n  //         {makeButton({\n  //             value: \"Pause\",\n  //             disabledValue: !isRunning || (time === inputTime)\n  //         })}\n  //         {makeButton({\n  //             value: \"Resume\",\n  //             disabledValue: isRunning || isComplete || (time === inputTime)\n  //         })}\n  //         {makeButton({\n  //             value: \"Fast Forward\",\n  //             disabledValue: isComplete || (time === inputTime)\n  //         })}\n  //         {makeButton({\n  //             value: \"Reset\",\n  //             disabledValue: isComplete && (time !== inputTime)\n  //         })}\n  //     </div>\n  // );\n};\n\n_s(Stopwatch, \"yIxSAXm0tMbeoE2AoD744dznYSg=\", false, function () {\n  return [useTimeSetter];\n});\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useEffect","useState","useContext","AppContext","Counter","translateFromSeconds","useTimeSetter","Stopwatch","timer","setcurrentTimerId","isRunningMain","timerId","id","isRunning","setIsRunning","isComplete","setIsComplete","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","handleClick","value","i","setInterval","clearInterval"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\n\nconst Stopwatch = timer => {\n\n    const { setcurrentTimerId, isRunningMain } = useContext(AppContext);\n\n    const timerId = timer.id;\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(timer.inputHours);\n    const [inputMinutes, setInputMinutes] = useState(timer.inputMinutes);\n    const [inputSeconds, setInputSeconds] = useState(timer.inputSeconds);\n    const [inputTime, setInputTime] = useState(0);\n\n    useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n\n    const handleClick = value => {\n        switch(value) {\n            case 'Start':\n                setIsRunning(true);\n                setIsComplete(false);\n                break;\n            case 'Pause':\n                setIsRunning(false);\n                break;\n            case 'Resume':\n                setIsRunning(true);\n                break;\n            case 'Fast Forward':\n                setTime(inputTime);\n                setIsComplete(true);\n                break;\n            case 'Reset':\n                setTime(0);\n                setIsComplete(true);\n                setIsRunning(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    // const makeButton = ({value, disabledValue}) => {\n    //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n    // };\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time + 1);\n            }, 1000);\n            if (time >= inputTime) {\n                clearInterval(i);\n                setIsRunning(false);\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, inputTime, isRunning]);\n\n    return (\n        <Counter>{translateFromSeconds(time)}</Counter>\n    );\n    \n    // return (\n    //     <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n    //         {makeButton({\n    //             value: \"Start\",\n    //             disabledValue: !isComplete || (time === inputTime)\n    //         })}\n    //         {makeButton({\n    //             value: \"Pause\",\n    //             disabledValue: !isRunning || (time === inputTime)\n    //         })}\n    //         {makeButton({\n    //             value: \"Resume\",\n    //             disabledValue: isRunning || isComplete || (time === inputTime)\n    //         })}\n    //         {makeButton({\n    //             value: \"Fast Forward\",\n    //             disabledValue: isComplete || (time === inputTime)\n    //         })}\n    //         {makeButton({\n    //             value: \"Reset\",\n    //             disabledValue: isComplete && (time !== inputTime)\n    //         })}\n    //     </div>\n    // );\n};\n\nexport default Stopwatch;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,aAAT,QAA8B,mBAA9B;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;;EAEvB,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAuCR,UAAU,CAACC,UAAD,CAAvD;EAEA,MAAMQ,OAAO,GAAGH,KAAK,CAACI,EAAtB;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAACO,KAAK,CAACW,UAAP,CAA5C;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAACO,KAAK,CAACa,YAAP,CAAhD;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAACO,KAAK,CAACe,YAAP,CAAhD;EACA,MAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,CAAD,CAA1C;EAEAK,aAAa,CAACoB,YAAD,EAAeP,UAAf,EAA2BE,YAA3B,EAAyCE,YAAzC,CAAb;;EAEA,MAAMI,WAAW,GAAGC,KAAK,IAAI;IACzB,QAAOA,KAAP;MACI,KAAK,OAAL;QACId,YAAY,CAAC,IAAD,CAAZ;QACAE,aAAa,CAAC,KAAD,CAAb;QACA;;MACJ,KAAK,OAAL;QACIF,YAAY,CAAC,KAAD,CAAZ;QACA;;MACJ,KAAK,QAAL;QACIA,YAAY,CAAC,IAAD,CAAZ;QACA;;MACJ,KAAK,cAAL;QACII,OAAO,CAACO,SAAD,CAAP;QACAT,aAAa,CAAC,IAAD,CAAb;QACA;;MACJ,KAAK,OAAL;QACIE,OAAO,CAAC,CAAD,CAAP;QACAF,aAAa,CAAC,IAAD,CAAb;QACAF,YAAY,CAAC,KAAD,CAAZ;QACA;;MACJ;QACI;IArBR;EAuBH,CAxBD,CAfuB,CAyCvB;EACA;EACA;;;EAEAd,SAAS,CAAC,MAAM;IAEZ,IAAI6B,CAAJ;;IAEA,IAAIhB,SAAJ,EAAe;MACXgB,CAAC,GAAGC,WAAW,CAAC,MAAM;QAClBZ,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,IAAI,IAAIQ,SAAZ,EAAuB;QACnBM,aAAa,CAACF,CAAD,CAAb;QACAf,YAAY,CAAC,KAAD,CAAZ;MACH;IACJ;;IAED,OAAO,MAAMiB,aAAa,CAACF,CAAD,CAA1B;EAEH,CAhBQ,EAgBN,CAACZ,IAAD,EAAOQ,SAAP,EAAkBZ,SAAlB,CAhBM,CAAT;EAkBA,oBACI,QAAC,OAAD;IAAA,UAAUR,oBAAoB,CAACY,IAAD;EAA9B;IAAA;IAAA;IAAA;EAAA,QADJ,CA/DuB,CAmEvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CA3FD;;GAAMV,S;UAaFD,a;;;KAbEC,S;AA6FN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}