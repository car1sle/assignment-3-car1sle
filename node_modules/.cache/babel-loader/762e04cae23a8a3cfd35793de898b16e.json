{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-1-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Button from '../generic/Button';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = () => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(0);\n  const [inputMinutes, setInputMinutes] = useState(0);\n  const [inputSeconds, setInputSeconds] = useState(0);\n  const [inputTime, setInputTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [inputIsDisabled, setInputIsDisabled] = useState(false);\n\n  const handleClick = value => {\n    if (value === \"Start\") {\n      setIsRunning(true);\n      setIsComplete(false);\n      setInputIsDisabled(true);\n    } else if (value === \"Pause\") {\n      setIsRunning(false);\n    } else if (value === \"Resume\") {\n      setIsRunning(true);\n    } else if (value === 'Fast Forward') {\n      setTime(0);\n      setIsComplete(true);\n      setInputIsDisabled(false);\n    } else if (value === 'Reset') {\n      setTime(inputTime);\n      setIsComplete(true);\n      setIsRunning(false);\n      setInputIsDisabled(false);\n    }\n  };\n\n  const makeInputs = (state, setter) => {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      value: state,\n      disabled: inputIsDisabled,\n      onChange: e => {\n        if (e.target.value) {\n          setter(parseInt(e.target.value));\n          setTime(parseInt(e.target.value));\n        } else {\n          setter(0);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  };\n\n  useEffect(() => {\n    const totalSeconds = translateToSeconds(inputHours, inputMinutes, inputSeconds);\n    setInputTime(totalSeconds);\n    setTime(totalSeconds);\n  }, [inputHours, inputMinutes, inputSeconds]);\n  useEffect(() => {\n    let i;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        clearInterval(i);\n        setIsRunning(false);\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, inputTime, isRunning]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: translateFromSeconds(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), \"Count down from\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), makeInputs(hours), \" H\", makeInputs(inputMinutes, setInputMinutes), \" M\", makeInputs(inputSeconds, setInputHours), \" S\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"Start\",\n      disabledValue: !isComplete || time != inputTime,\n      inputTime: inputTime,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"Pause\",\n      disabledValue: !isRunning,\n      inputTime: inputTime,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"Resume\",\n      disabledValue: isRunning || isComplete || time === 0,\n      inputTime: inputTime,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"Fast Forward\",\n      disabledValue: isComplete || time === 0,\n      inputTime: inputTime,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"Reset\",\n      disabledValue: isComplete && time === inputTime,\n      inputTime: inputTime,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countdown, \"+Amsxakr1VVxJbEMTN0vEop+h2U=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","Button","translateFromSeconds","translateToSeconds","Countdown","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","isRunning","setIsRunning","isComplete","setIsComplete","inputIsDisabled","setInputIsDisabled","handleClick","value","makeInputs","state","setter","e","target","parseInt","totalSeconds","i","setInterval","clearInterval","hours"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-1-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Button from '../generic/Button';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst Countdown = () => {\n\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(0);\n    const [inputMinutes, setInputMinutes] = useState(0);\n    const [inputSeconds, setInputSeconds] = useState(0);\n    const [inputTime, setInputTime] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [inputIsDisabled, setInputIsDisabled] = useState(false);\n\n    const handleClick = value => {\n        if (value === \"Start\") {\n            setIsRunning(true);\n            setIsComplete(false);\n            setInputIsDisabled(true);\n        } else if (value === \"Pause\") {\n            setIsRunning(false);\n        } else if (value === \"Resume\") {\n            setIsRunning(true);\n        } else if (value === 'Fast Forward') {\n            setTime(0);\n            setIsComplete(true);\n            setInputIsDisabled(false);\n        } else if (value === 'Reset') {\n            setTime(inputTime);\n            setIsComplete(true);\n            setIsRunning(false);\n            setInputIsDisabled(false);\n        }\n    }\n\n    const makeInputs = (state, setter) => {\n        return <input type=\"number\" min=\"0\" value={state} disabled={inputIsDisabled} onChange={e => {\n            if (e.target.value) {\n                setter(parseInt(e.target.value));\n                setTime(parseInt(e.target.value));\n            } else {\n                setter(0);\n            }\n        }} />\n    };\n\n    useEffect(() => {\n        \n        const totalSeconds = translateToSeconds(inputHours, inputMinutes, inputSeconds);\n        setInputTime(totalSeconds);\n        setTime(totalSeconds);\n\n    }, [inputHours, inputMinutes, inputSeconds]);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                clearInterval(i);\n                setIsRunning(false);\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, inputTime, isRunning]);\n\n    return (\n        <>\n            <div>{translateFromSeconds(time)}</div>\n            Count down from\n            <br></br>\n            {makeInputs(hours)} H\n            {makeInputs(inputMinutes, setInputMinutes)} M\n            {makeInputs(inputSeconds, setInputHours)} S\n            <br></br>\n            <Button value=\"Start\" disabledValue={!isComplete || (time != inputTime)} inputTime={inputTime} onClick={handleClick} />\n            <Button value=\"Pause\" disabledValue={!isRunning} inputTime={inputTime} onClick={handleClick} />\n            <Button value=\"Resume\" disabledValue={(isRunning || isComplete || (time === 0))} inputTime={inputTime} onClick={handleClick} />\n            <Button value=\"Fast Forward\" disabledValue={isComplete || (time === 0)} inputTime={inputTime} onClick={handleClick} />\n            <Button value=\"Reset\" disabledValue={isComplete && (time === inputTime)} inputTime={inputTime} onClick={handleClick} />\n        </>\n    );\n};\n\nexport default Countdown;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,KAAD,CAAtD;;EAEA,MAAMqB,WAAW,GAAGC,KAAK,IAAI;IACzB,IAAIA,KAAK,KAAK,OAAd,EAAuB;MACnBN,YAAY,CAAC,IAAD,CAAZ;MACAE,aAAa,CAAC,KAAD,CAAb;MACAE,kBAAkB,CAAC,IAAD,CAAlB;IACH,CAJD,MAIO,IAAIE,KAAK,KAAK,OAAd,EAAuB;MAC1BN,YAAY,CAAC,KAAD,CAAZ;IACH,CAFM,MAEA,IAAIM,KAAK,KAAK,QAAd,EAAwB;MAC3BN,YAAY,CAAC,IAAD,CAAZ;IACH,CAFM,MAEA,IAAIM,KAAK,KAAK,cAAd,EAA8B;MACjChB,OAAO,CAAC,CAAD,CAAP;MACAY,aAAa,CAAC,IAAD,CAAb;MACAE,kBAAkB,CAAC,KAAD,CAAlB;IACH,CAJM,MAIA,IAAIE,KAAK,KAAK,OAAd,EAAuB;MAC1BhB,OAAO,CAACO,SAAD,CAAP;MACAK,aAAa,CAAC,IAAD,CAAb;MACAF,YAAY,CAAC,KAAD,CAAZ;MACAI,kBAAkB,CAAC,KAAD,CAAlB;IACH;EACJ,CAnBD;;EAqBA,MAAMG,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;IAClC,oBAAO;MAAO,IAAI,EAAC,QAAZ;MAAqB,GAAG,EAAC,GAAzB;MAA6B,KAAK,EAAED,KAApC;MAA2C,QAAQ,EAAEL,eAArD;MAAsE,QAAQ,EAAEO,CAAC,IAAI;QACxF,IAAIA,CAAC,CAACC,MAAF,CAASL,KAAb,EAAoB;UAChBG,MAAM,CAACG,QAAQ,CAACF,CAAC,CAACC,MAAF,CAASL,KAAV,CAAT,CAAN;UACAhB,OAAO,CAACsB,QAAQ,CAACF,CAAC,CAACC,MAAF,CAASL,KAAV,CAAT,CAAP;QACH,CAHD,MAGO;UACHG,MAAM,CAAC,CAAD,CAAN;QACH;MACJ;IAPM;MAAA;MAAA;MAAA;IAAA,QAAP;EAQH,CATD;;EAWA1B,SAAS,CAAC,MAAM;IAEZ,MAAM8B,YAAY,GAAG1B,kBAAkB,CAACI,UAAD,EAAaE,YAAb,EAA2BE,YAA3B,CAAvC;IACAG,YAAY,CAACe,YAAD,CAAZ;IACAvB,OAAO,CAACuB,YAAD,CAAP;EAEH,CANQ,EAMN,CAACtB,UAAD,EAAaE,YAAb,EAA2BE,YAA3B,CANM,CAAT;EAQAZ,SAAS,CAAC,MAAM;IAEZ,IAAI+B,CAAJ;;IAEA,IAAIf,SAAJ,EAAe;MACXe,CAAC,GAAGC,WAAW,CAAC,MAAM;QAClBzB,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACZ2B,aAAa,CAACF,CAAD,CAAb;QACAd,YAAY,CAAC,KAAD,CAAZ;MACH;IACJ;;IAED,OAAO,MAAMgB,aAAa,CAACF,CAAD,CAA1B;EAEH,CAhBQ,EAgBN,CAACzB,IAAD,EAAOQ,SAAP,EAAkBE,SAAlB,CAhBM,CAAT;EAkBA,oBACI;IAAA,wBACI;MAAA,UAAMb,oBAAoB,CAACG,IAAD;IAA1B;MAAA;MAAA;MAAA;IAAA,QADJ,kCAGI;MAAA;MAAA;MAAA;IAAA,QAHJ,EAIKkB,UAAU,CAACU,KAAD,CAJf,QAKKV,UAAU,CAACd,YAAD,EAAeC,eAAf,CALf,QAMKa,UAAU,CAACZ,YAAD,EAAeH,aAAf,CANf,qBAOI;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI,QAAC,MAAD;MAAQ,KAAK,EAAC,OAAd;MAAsB,aAAa,EAAE,CAACS,UAAD,IAAgBZ,IAAI,IAAIQ,SAA7D;MAAyE,SAAS,EAAEA,SAApF;MAA+F,OAAO,EAAEQ;IAAxG;MAAA;MAAA;MAAA;IAAA,QARJ,eASI,QAAC,MAAD;MAAQ,KAAK,EAAC,OAAd;MAAsB,aAAa,EAAE,CAACN,SAAtC;MAAiD,SAAS,EAAEF,SAA5D;MAAuE,OAAO,EAAEQ;IAAhF;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI,QAAC,MAAD;MAAQ,KAAK,EAAC,QAAd;MAAuB,aAAa,EAAGN,SAAS,IAAIE,UAAb,IAA4BZ,IAAI,KAAK,CAA5E;MAAiF,SAAS,EAAEQ,SAA5F;MAAuG,OAAO,EAAEQ;IAAhH;MAAA;MAAA;MAAA;IAAA,QAVJ,eAWI,QAAC,MAAD;MAAQ,KAAK,EAAC,cAAd;MAA6B,aAAa,EAAEJ,UAAU,IAAKZ,IAAI,KAAK,CAApE;MAAwE,SAAS,EAAEQ,SAAnF;MAA8F,OAAO,EAAEQ;IAAvG;MAAA;MAAA;MAAA;IAAA,QAXJ,eAYI,QAAC,MAAD;MAAQ,KAAK,EAAC,OAAd;MAAsB,aAAa,EAAEJ,UAAU,IAAKZ,IAAI,KAAKQ,SAA7D;MAAyE,SAAS,EAAEA,SAApF;MAA+F,OAAO,EAAEQ;IAAxG;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA,gBADJ;AAgBH,CArFD;;GAAMjB,S;;KAAAA,S;AAuFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}