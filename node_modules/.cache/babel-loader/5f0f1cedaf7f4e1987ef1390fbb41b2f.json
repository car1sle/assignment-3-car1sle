{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst usePrevious = value => {\n  _s();\n\n  const previous = useRef(0);\n  useEffect(() => {\n    previous.current = value;\n  }, [value]);\n  return previous.current;\n};\n\n_s(usePrevious, \"JvIZ6aC6Eo4Ce3kAx+KIHv2roI8=\");\n\nconst Countdown = _ref => {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  let {\n    props\n  } = _ref;\n\n  // const { timers, workoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n  // const { id, inputHours, inputMinutes, inputSeconds } = props;\n  // const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n  // const prevTime = usePrevious(time);\n  // const [isRunning, setIsRunning] = useState(workoutIsRunning);\n  _s2(useEffect(_s2(() => {\n    _s2();\n\n    const {\n      timers,\n      workoutIsRunning,\n      currentTimerId,\n      setCurrentTimerId,\n      setWorkoutIsComplete\n    } = useContext(AppContext);\n    const {\n      id,\n      inputHours,\n      inputMinutes,\n      inputSeconds\n    } = props;\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    const prevTime = usePrevious(time);\n    const [isRunning, setIsRunning] = useState(workoutIsRunning);\n    let i;\n\n    if (isRunning && currentTimerId === id) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        clearInterval(i);\n        setIsRunning(false);\n\n        if (id < timers.length) {\n          setCurrentTimerId(currentTimerId + 1);\n        }\n      }\n    }\n\n    return () => {\n      clearInterval(i);\n\n      if (id === timers.length) {\n        setWorkoutIsComplete(true);\n      }\n    };\n  }, \"4CtAa6UtmJDKQ9U3AOgxOEkSMxI=\", false, function () {\n    return [usePrevious];\n  }), [time, prevTime, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]), \"4CtAa6UtmJDKQ9U3AOgxOEkSMxI=\", false, function () {\n    return [usePrevious];\n  });\n\n  const displayTime = id < currentTimerId ? '00:00:00' : translateFromSeconds(time);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: displayTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(Countdown, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","useContext","useRef","AppContext","Counter","translateFromSeconds","translateToSeconds","usePrevious","value","previous","current","Countdown","props","timers","workoutIsRunning","currentTimerId","setCurrentTimerId","setWorkoutIsComplete","id","inputHours","inputMinutes","inputSeconds","time","setTime","prevTime","isRunning","setIsRunning","i","setInterval","clearInterval","length","displayTime"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst usePrevious = value => {\n    const previous = useRef(0);\n  \n    useEffect(() => {\n      previous.current = value;\n    }, [value]);\n  \n    return previous.current;\n};\n\nconst Countdown = ({props}) => {\n\n    // const { timers, workoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    // const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    // const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    // const prevTime = usePrevious(time);\n    // const [isRunning, setIsRunning] = useState(workoutIsRunning);\n\n    useEffect(() => {\n\n\n    const { timers, workoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    const prevTime = usePrevious(time);\n    const [isRunning, setIsRunning] = useState(workoutIsRunning);\n\n        let i;\n\n        if (isRunning && currentTimerId === id) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                clearInterval(i);\n                setIsRunning(false);\n                if (id < timers.length) {\n                    setCurrentTimerId(currentTimerId + 1);\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(i);\n            if (id === timers.length) {\n                setWorkoutIsComplete(true);\n            }\n        }\n\n    }, [time, prevTime, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]);\n\n    const displayTime = (id < currentTimerId) ? '00:00:00' : translateFromSeconds(time);\n\n    return (\n\n        <Counter>{displayTime}</Counter>\n    );\n\n};\n\nexport default Countdown;"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAA;;EACzB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAD,CAAvB;EAEAH,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,OAAT,GAAmBF,KAAnB;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIA,OAAOC,QAAQ,CAACC,OAAhB;AACH,CARD;;GAAMH,W;;AAUN,MAAMI,SAAS,GAAG,QAAa;EAAA;;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;;EAE3B;EACA;EAEA;EACA;EACA;EAEA,IAAAb,SAAS,KAAC,MAAM;IAAA;;IAGhB,MAAM;MAAEc,MAAF;MAAUC,gBAAV;MAA4BC,cAA5B;MAA4CC,iBAA5C;MAA+DC;IAA/D,IAAwFhB,UAAU,CAACE,UAAD,CAAxG;IACA,MAAM;MAAEe,EAAF;MAAMC,UAAN;MAAkBC,YAAlB;MAAgCC;IAAhC,IAAiDT,KAAvD;IAEA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAACM,kBAAkB,CAACa,UAAD,EAAaC,YAAb,EAA2BC,YAA3B,CAAnB,CAAhC;IACA,MAAMG,QAAQ,GAAGjB,WAAW,CAACe,IAAD,CAA5B;IACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAACc,gBAAD,CAA1C;IAEI,IAAIa,CAAJ;;IAEA,IAAIF,SAAS,IAAIV,cAAc,KAAKG,EAApC,EAAwC;MACpCS,CAAC,GAAGC,WAAW,CAAC,MAAM;QAClBL,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACZO,aAAa,CAACF,CAAD,CAAb;QACAD,YAAY,CAAC,KAAD,CAAZ;;QACA,IAAIR,EAAE,GAAGL,MAAM,CAACiB,MAAhB,EAAwB;UACpBd,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;QACH;MACJ;IACJ;;IAED,OAAO,MAAM;MACTc,aAAa,CAACF,CAAD,CAAb;;MACA,IAAIT,EAAE,KAAKL,MAAM,CAACiB,MAAlB,EAA0B;QACtBb,oBAAoB,CAAC,IAAD,CAApB;MACH;IACJ,CALD;EAOH,CAhCQ;IAAA,QAOQV,WAPR;EAAA,IAgCN,CAACe,IAAD,EAAOE,QAAP,EAAiBC,SAAjB,EAA4BV,cAA5B,EAA4CG,EAA5C,EAAgDF,iBAAhD,EAAmEH,MAAnE,EAA2EI,oBAA3E,CAhCM,CAAT;IAAA,QAOiBV,WAPjB;EAAA;;EAkCA,MAAMwB,WAAW,GAAIb,EAAE,GAAGH,cAAN,GAAwB,UAAxB,GAAqCV,oBAAoB,CAACiB,IAAD,CAA7E;EAEA,oBAEI,QAAC,OAAD;IAAA,UAAUS;EAAV;IAAA;IAAA;IAAA;EAAA,QAFJ;AAKH,CAlDD;;IAAMpB,S;;KAAAA,S;AAoDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}