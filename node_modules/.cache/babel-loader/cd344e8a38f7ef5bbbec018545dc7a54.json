{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst usePrevious = value => {\n  _s();\n\n  const previous = useRef(0);\n  useEffect(() => {\n    previous.current = value;\n  }, [value]);\n  return previous.current;\n};\n\n_s(usePrevious, \"JvIZ6aC6Eo4Ce3kAx+KIHv2roI8=\");\n\nconst Countdown = _ref => {\n  _s2();\n\n  let {\n    props\n  } = _ref;\n  const {\n    timers,\n    workoutIsRunning,\n    currentTimerId,\n    setCurrentTimerId,\n    setWorkoutIsComplete\n  } = useContext(AppContext);\n  const {\n    id,\n    inputHours,\n    inputMinutes,\n    inputSeconds\n  } = props;\n  const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n  const prevTime = usePrevious(time);\n  const [isRunning, setIsRunning] = useState(workoutIsRunning);\n  useEffect(() => {\n    let i;\n\n    if (isRunning && currentTimerId === id) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        clearInterval(i);\n        setIsRunning(false);\n\n        if (id < timers.length) {\n          setCurrentTimerId(currentTimerId + 1);\n        }\n      }\n    }\n\n    return () => {\n      clearInterval(i);\n\n      if (id === timers.length) {// setWorkoutIsComplete(true);\n      }\n    };\n  }, [time, prevTime, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]); // const displayTime = (id < currentTimerId) ? '00:00:00' : translateFromSeconds(time);\n\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: displayTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Countdown, \"FbGsjugJ2w+21xY6fd/efLCyes0=\", false, function () {\n  return [usePrevious];\n});\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","useContext","useRef","AppContext","Counter","translateFromSeconds","translateToSeconds","usePrevious","value","previous","current","Countdown","props","timers","workoutIsRunning","currentTimerId","setCurrentTimerId","setWorkoutIsComplete","id","inputHours","inputMinutes","inputSeconds","time","setTime","prevTime","isRunning","setIsRunning","i","setInterval","clearInterval","length","displayTime"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState, useContext, useRef } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst usePrevious = value => {\n    const previous = useRef(0);\n  \n    useEffect(() => {\n      previous.current = value;\n    }, [value]);\n  \n    return previous.current;\n};\n\nconst Countdown = ({props}) => {\n\n    const { timers, workoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    const prevTime = usePrevious(time);\n    const [isRunning, setIsRunning] = useState(workoutIsRunning);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning && currentTimerId === id) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                clearInterval(i);\n                setIsRunning(false);\n                if (id < timers.length) {\n                    setCurrentTimerId(currentTimerId + 1);\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(i);\n            if (id === timers.length) {\n                // setWorkoutIsComplete(true);\n            }\n        }\n\n    }, [time, prevTime, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]);\n\n    // const displayTime = (id < currentTimerId) ? '00:00:00' : translateFromSeconds(time);\n\n    return (\n\n        <Counter>{displayTime}</Counter>\n    );\n\n};\n\nexport default Countdown;"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAA;;EACzB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAD,CAAvB;EAEAH,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,OAAT,GAAmBF,KAAnB;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIA,OAAOC,QAAQ,CAACC,OAAhB;AACH,CARD;;GAAMH,W;;AAUN,MAAMI,SAAS,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE3B,MAAM;IAAEC,MAAF;IAAUC,gBAAV;IAA4BC,cAA5B;IAA4CC,iBAA5C;IAA+DC;EAA/D,IAAwFhB,UAAU,CAACE,UAAD,CAAxG;EACA,MAAM;IAAEe,EAAF;IAAMC,UAAN;IAAkBC,YAAlB;IAAgCC;EAAhC,IAAiDT,KAAvD;EAEA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAACM,kBAAkB,CAACa,UAAD,EAAaC,YAAb,EAA2BC,YAA3B,CAAnB,CAAhC;EACA,MAAMG,QAAQ,GAAGjB,WAAW,CAACe,IAAD,CAA5B;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAACc,gBAAD,CAA1C;EAEAf,SAAS,CAAC,MAAM;IAEZ,IAAI4B,CAAJ;;IAEA,IAAIF,SAAS,IAAIV,cAAc,KAAKG,EAApC,EAAwC;MACpCS,CAAC,GAAGC,WAAW,CAAC,MAAM;QAClBL,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACZO,aAAa,CAACF,CAAD,CAAb;QACAD,YAAY,CAAC,KAAD,CAAZ;;QACA,IAAIR,EAAE,GAAGL,MAAM,CAACiB,MAAhB,EAAwB;UACpBd,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;QACH;MACJ;IACJ;;IAED,OAAO,MAAM;MACTc,aAAa,CAACF,CAAD,CAAb;;MACA,IAAIT,EAAE,KAAKL,MAAM,CAACiB,MAAlB,EAA0B,CACtB;MACH;IACJ,CALD;EAOH,CAxBQ,EAwBN,CAACR,IAAD,EAAOE,QAAP,EAAiBC,SAAjB,EAA4BV,cAA5B,EAA4CG,EAA5C,EAAgDF,iBAAhD,EAAmEH,MAAnE,EAA2EI,oBAA3E,CAxBM,CAAT,CAT2B,CAmC3B;;EAEA,oBAEI,QAAC,OAAD;IAAA,UAAUc;EAAV;IAAA;IAAA;IAAA;EAAA,QAFJ;AAKH,CA1CD;;IAAMpB,S;UAMeJ,W;;;KANfI,S;AA4CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}