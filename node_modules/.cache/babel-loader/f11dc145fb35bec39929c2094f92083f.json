{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Tabata.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tabata = props => {\n  _s();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(0);\n  const [inputMinutes, setInputMinutes] = useState(0);\n  const [inputSeconds, setInputSeconds] = useState(0);\n  const [inputTime, setInputTime] = useState(0);\n  const [round, setRound] = useState(1);\n  const [counterRound, setCounterRound] = useState(1);\n  const [inputRounds, setInputRounds] = useState(1);\n  const [time2, setTime2] = useState(0);\n  const [input2Hours, setInput2Hours] = useState(0);\n  const [input2Minutes, setInput2Minutes] = useState(0);\n  const [input2Seconds, setInput2Seconds] = useState(0);\n  const [input2Time, setInput2Time] = useState(0);\n\n  const handleClick = value => {\n    switch (value) {\n      case 'Start':\n        setIsRunning(true);\n        setIsComplete(false);\n        break;\n\n      case 'Pause':\n        setIsRunning(false);\n        break;\n\n      case 'Resume':\n        setIsRunning(true);\n        break;\n\n      case 'Fast Forward':\n        setTime(0);\n        setTime2(0);\n        setIsRunning(false);\n        setIsComplete(true);\n        setRound(inputRounds);\n        setCounterRound(inputRounds);\n        break;\n\n      case 'Reset':\n        setTime(inputTime);\n        setTime2(input2Time);\n        setIsComplete(true);\n        setIsRunning(false);\n        setRound(inputRounds);\n        setCounterRound(1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const makeInput = _ref => {\n    let {\n      state,\n      setter,\n      relatedSetter,\n      label\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      label: label,\n      value: state,\n      onChange: e => {\n        if (e.target.value) {\n          setter(parseInt(e.target.value));\n          relatedSetter && relatedSetter(parseInt(e.target.value));\n        } else {\n          setter(0);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }; // const makeButton = ({value, disabledValue}) => {\n  //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n  // };\n\n\n  useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n  useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n  useTimeSetter(setInput2Time, input2Hours, input2Minutes, input2Seconds);\n  useTimeSetter(setTime2, input2Hours, input2Minutes, input2Seconds);\n  useEffect(() => {\n    let i;\n    let i2;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        if (time2 !== 0) {\n          i2 = setInterval(() => {\n            setTime2(time2 - 1);\n          }, 1000);\n          clearInterval(i);\n        } else if (round === 1) {\n          clearInterval(i);\n          clearInterval(i2);\n          setIsRunning(false);\n        } else {\n          setTime(inputTime);\n          setTime2(input2Time);\n          setRound(round - 1);\n          setCounterRound(counterRound + 1);\n        }\n      }\n    }\n\n    return () => {\n      clearInterval(i);\n      clearInterval(i2);\n    };\n  }, [time, inputTime, isRunning, round, counterRound, time2, input2Time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"75px\",\n          textAlign: \"right\"\n        },\n        children: \"Workout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        children: translateFromSeconds(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"75px\",\n          textAlign: \"right\"\n        },\n        children: \"Rest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        children: translateFromSeconds(time2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this); // return (\n  //     <>\n  //         <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {counterRound} of {inputRounds}</div>\n  //         <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n  //             {makeButton({\n  //                 value: \"Start\",\n  //                 disabledValue: !isComplete || (time === 0)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Pause\",\n  //                 disabledValue: !isRunning\n  //             })}\n  //             {makeButton({\n  //                 value: \"Resume\",\n  //                 disabledValue: isRunning || isComplete || (time === 0 && time2 === 0)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Fast Forward\",\n  //                 disabledValue: isComplete || (time === 0 && time2 === 0)\n  //             })}\n  //             {makeButton({\n  //                 value: \"Reset\",\n  //                 disabledValue: isComplete && (time === inputTime)\n  //             })}\n  //         </div>\n  //     </>\n  // );\n};\n\n_s(Tabata, \"uR7zAgtj8y3KtkwEr1zVnL22YcE=\", false, function () {\n  return [useTimeSetter, useTimeSetter, useTimeSetter, useTimeSetter];\n});\n\n_c = Tabata;\nexport default Tabata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useEffect","useState","Input","Counter","translateFromSeconds","useTimeSetter","Tabata","props","isRunning","setIsRunning","isComplete","setIsComplete","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","round","setRound","counterRound","setCounterRound","inputRounds","setInputRounds","time2","setTime2","input2Hours","setInput2Hours","input2Minutes","setInput2Minutes","input2Seconds","setInput2Seconds","input2Time","setInput2Time","handleClick","value","makeInput","state","setter","relatedSetter","label","e","target","parseInt","i","i2","setInterval","clearInterval","textAlign","display","justifyContent","alignItems","width"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Tabata.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Input from '../generic/Input';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\n\nconst Tabata = props => {\n\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(0);\n    const [inputMinutes, setInputMinutes] = useState(0);\n    const [inputSeconds, setInputSeconds] = useState(0);\n    const [inputTime, setInputTime] = useState(0);\n    const [round, setRound] = useState(1);\n    const [counterRound, setCounterRound] = useState(1);\n    const [inputRounds, setInputRounds] = useState(1);\n    const [time2, setTime2] = useState(0);\n    const [input2Hours, setInput2Hours] = useState(0);\n    const [input2Minutes, setInput2Minutes] = useState(0);\n    const [input2Seconds, setInput2Seconds] = useState(0);\n    const [input2Time, setInput2Time] = useState(0);\n\n    const handleClick = value => {\n        switch(value) {\n            case 'Start':\n                setIsRunning(true);\n                setIsComplete(false);\n                break;\n            case 'Pause':\n                setIsRunning(false);\n                break;\n            case 'Resume':\n                setIsRunning(true);\n                break;\n            case 'Fast Forward':\n                setTime(0);\n                setTime2(0);\n                setIsRunning(false);\n                setIsComplete(true);\n                setRound(inputRounds);\n                setCounterRound(inputRounds);\n                break;\n            case 'Reset':\n                setTime(inputTime);\n                setTime2(input2Time);\n                setIsComplete(true);\n                setIsRunning(false);\n                setRound(inputRounds);\n                setCounterRound(1);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const makeInput = ({state, setter, relatedSetter, label}) => {\n        return <Input label={label} value={state} onChange={e => {\n            if (e.target.value) {\n                setter(parseInt(e.target.value));\n                relatedSetter && relatedSetter(parseInt(e.target.value));\n            } else {\n                setter(0);\n            }\n        }} />\n    };\n\n    // const makeButton = ({value, disabledValue}) => {\n    //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n    // };\n\n    useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n    useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n    useTimeSetter(setInput2Time, input2Hours, input2Minutes, input2Seconds);\n    useTimeSetter(setTime2, input2Hours, input2Minutes, input2Seconds);\n\n    useEffect(() => {\n\n        let i;\n        let i2;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                if (time2 !== 0) {\n                    i2 = setInterval(() => {\n                        setTime2(time2 - 1);\n                    }, 1000);\n                    clearInterval(i);\n                } else if (round === 1) {\n                    clearInterval(i);\n                    clearInterval(i2);\n                    setIsRunning(false);\n                } else {\n                    setTime(inputTime);\n                    setTime2(input2Time);\n                    setRound(round - 1);\n                    setCounterRound(counterRound + 1);\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(i);\n            clearInterval(i2);\n        };\n\n    }, [time, inputTime, isRunning, round, counterRound, time2, input2Time ]);\n\n    return (\n        <div style={{ textAlign: \"center\",}}>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                <div style={{ width: \"75px\", textAlign: \"right\"}}>Workout:</div>\n                <Counter>{translateFromSeconds(time)}</Counter>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                <div style={{ width: \"75px\", textAlign: \"right\"}}>Rest:</div>\n                <Counter>{translateFromSeconds(time2)}</Counter>\n            </div>\n        </div>\n    );\n\n    // return (\n    //     <>\n    //         <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {counterRound} of {inputRounds}</div>\n    //         <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n    //             {makeButton({\n    //                 value: \"Start\",\n    //                 disabledValue: !isComplete || (time === 0)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Pause\",\n    //                 disabledValue: !isRunning\n    //             })}\n    //             {makeButton({\n    //                 value: \"Resume\",\n    //                 disabledValue: isRunning || isComplete || (time === 0 && time2 === 0)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Fast Forward\",\n    //                 disabledValue: isComplete || (time === 0 && time2 === 0)\n    //             })}\n    //             {makeButton({\n    //                 value: \"Reset\",\n    //                 disabledValue: isComplete && (time === inputTime)\n    //             })}\n    //         </div>\n    //     </>\n    // );\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}