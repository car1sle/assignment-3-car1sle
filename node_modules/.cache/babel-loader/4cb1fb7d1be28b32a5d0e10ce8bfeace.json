{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst XY = props => {\n  _s();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [isComplete, setIsComplete] = useState(true);\n  const [time, setTime] = useState(0);\n  const [inputHours, setInputHours] = useState(0);\n  const [inputMinutes, setInputMinutes] = useState(0);\n  const [inputSeconds, setInputSeconds] = useState(0);\n  const [inputTime, setInputTime] = useState(0);\n  const [round, setRound] = useState(1);\n  const [counterRound, setCounterRound] = useState(1);\n  const [inputRounds, setInputRounds] = useState(1);\n\n  const handleClick = value => {\n    switch (value) {\n      case 'Start':\n        setIsRunning(true);\n        setIsComplete(false);\n        break;\n\n      case 'Pause':\n        setIsRunning(false);\n        break;\n\n      case 'Resume':\n        setIsRunning(true);\n        break;\n\n      case 'Fast Forward':\n        setTime(0);\n        setIsRunning(false);\n        setIsComplete(true);\n        setRound(inputRounds);\n        setCounterRound(inputRounds);\n        break;\n\n      case 'Reset':\n        setTime(inputTime);\n        setIsComplete(true);\n        setIsRunning(false);\n        setRound(inputRounds);\n        setCounterRound(1);\n        break;\n\n      default:\n        break;\n    }\n  }; // const makeButton = ({value, disabledValue}) => {\n  //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n  // };\n\n\n  useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n  useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n  useEffect(() => {\n    let i;\n\n    if (isRunning) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        if (round === 1) {\n          clearInterval(i);\n          setIsRunning(false);\n        } else {\n          setTime(inputTime);\n          setRound(round - 1);\n          setCounterRound(counterRound + 1);\n        }\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, inputTime, isRunning, round, counterRound]);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: translateFromSeconds(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this); // return (\n  //         <>\n  //             <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {counterRound} of {inputRounds}</div>\n  //             <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n  //                 {makeButton({\n  //                     value: \"Start\",\n  //                     disabledValue: !isComplete || (time === 0)\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Pause\",\n  //                     disabledValue: !isRunning\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Resume\",\n  //                     disabledValue: isRunning || isComplete || (time === 0)\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Fast Forward\",\n  //                     disabledValue: isComplete || (time === 0)\n  //                 })}\n  //                 {makeButton({\n  //                     value: \"Reset\",\n  //                     disabledValue: isComplete && (time === inputTime)\n  //                 })}\n  //             </div>\n  //         </>\n  // );\n};\n\n_s(XY, \"uTOu3rofVvJMKmOhl9V8D84itBw=\", false, function () {\n  return [useTimeSetter, useTimeSetter];\n});\n\n_c = XY;\nexport default XY;\n\nvar _c;\n\n$RefreshReg$(_c, \"XY\");","map":{"version":3,"names":["useEffect","useState","Counter","translateFromSeconds","useTimeSetter","XY","props","isRunning","setIsRunning","isComplete","setIsComplete","time","setTime","inputHours","setInputHours","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","inputTime","setInputTime","round","setRound","counterRound","setCounterRound","inputRounds","setInputRounds","handleClick","value","i","setInterval","clearInterval"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport { useTimeSetter } from '../../utils/hooks';\n\nconst XY = props => {\n\n    const [isRunning, setIsRunning] = useState(false);\n    const [isComplete, setIsComplete] = useState(true);\n    const [time, setTime] = useState(0);\n    const [inputHours, setInputHours] = useState(0);\n    const [inputMinutes, setInputMinutes] = useState(0);\n    const [inputSeconds, setInputSeconds] = useState(0);\n    const [inputTime, setInputTime] = useState(0);\n    const [round, setRound] = useState(1);\n    const [counterRound, setCounterRound] = useState(1);\n    const [inputRounds, setInputRounds] = useState(1);\n\n    const handleClick = value => {\n        switch(value) {\n            case 'Start':\n                setIsRunning(true);\n                setIsComplete(false);\n                break;\n            case 'Pause':\n                setIsRunning(false);\n                break;\n            case 'Resume':\n                setIsRunning(true);\n                break;\n            case 'Fast Forward':\n                setTime(0);\n                setIsRunning(false);\n                setIsComplete(true);\n                setRound(inputRounds);\n                setCounterRound(inputRounds);\n                break;\n            case 'Reset':\n                setTime(inputTime);\n                setIsComplete(true);\n                setIsRunning(false);\n                setRound(inputRounds);\n                setCounterRound(1);\n                break;\n            default:\n                break;\n        }\n    }\n\n    // const makeButton = ({value, disabledValue}) => {\n    //     return <Button value={value} disabledValue={inputTime ? disabledValue : true} onClick={handleClick} />\n    // };\n\n    useTimeSetter(setInputTime, inputHours, inputMinutes, inputSeconds);\n    useTimeSetter(setTime, inputHours, inputMinutes, inputSeconds);\n\n    useEffect(() => {\n\n        let i;\n\n        if (isRunning) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                if (round === 1) {\n                    clearInterval(i);\n                    setIsRunning(false);\n                } else {\n                    setTime(inputTime);\n                    setRound(round - 1);\n                    setCounterRound(counterRound + 1);\n                }\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, inputTime, isRunning, round, counterRound ]);\n\n    return (\n        <Counter>{translateFromSeconds(time)}</Counter>\n    );\n\n    // return (\n    //         <>\n    //             <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {counterRound} of {inputRounds}</div>\n    //             <div style={{ margin: \"10px 0 20px\", display: \"flex\",}}>\n    //                 {makeButton({\n    //                     value: \"Start\",\n    //                     disabledValue: !isComplete || (time === 0)\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Pause\",\n    //                     disabledValue: !isRunning\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Resume\",\n    //                     disabledValue: isRunning || isComplete || (time === 0)\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Fast Forward\",\n    //                     disabledValue: isComplete || (time === 0)\n    //                 })}\n    //                 {makeButton({\n    //                     value: \"Reset\",\n    //                     disabledValue: isComplete && (time === inputTime)\n    //                 })}\n    //             </div>\n    //         </>\n    // );\n};\n\nexport default XY;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}