{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/AppProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useInterval } from \"./utils/hooks\";\nimport { translateToSeconds } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext({});\nexport const AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [timers, setTimers] = useState([]);\n  const [paused, setPaused] = useState(true);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [currentRound, setCurrentRound] = useState(1);\n  useInterval(() => {\n    if (paused || activeIndex >= timers.length) return;\n\n    if (timers[activeIndex].timerType === \"Tabata\") {}\n\n    ;\n\n    if (currentTime === timers[activeIndex].workoutRoundDuration) {\n      setCurrentTime(0);\n      setCurrentRound(r => {\n        let newRound = r + 1;\n\n        if (newRound > timers[activeIndex].inputRounds) {\n          newRound = 1;\n          setActiveIndex(activeIndex => activeIndex + 1);\n        }\n\n        return newRound;\n      });\n    } else {\n      setCurrentTime(c => c + 1);\n    }\n  }, 1000);\n\n  const reset = () => {\n    setActiveIndex(0);\n    setCurrentTime(0);\n    setPaused(true);\n    setIsComplete(false);\n    setCurrentRound(1);\n  };\n\n  const fastForward = () => {\n    setActiveIndex(activeIndex + 1);\n    setCurrentTime(0);\n    setCurrentRound(timers[activeIndex].inputRounds);\n    setIsComplete(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      timers,\n      currentTime,\n      currentRound,\n      setCurrentTime,\n      activeIndex,\n      setActiveIndex,\n      paused,\n      setPaused,\n      isComplete,\n      setIsComplete,\n      reset: reset,\n      fastForward: fastForward,\n      createTimer: _ref2 => {\n        let {\n          timerType,\n          inputHours,\n          inputMinutes,\n          inputSeconds,\n          input2Hours,\n          input2Minutes,\n          input2Seconds,\n          inputRounds = 1\n        } = _ref2;\n        const id = uuid();\n        setTimers([...timers, {\n          id,\n          timerType,\n          inputRounds,\n          workoutRoundDuration: translateToSeconds(inputHours, inputMinutes, inputSeconds),\n          restRoundDuration: translateToSeconds(input2Hours, input2Minutes, input2Seconds),\n          totalWorkoutDuration: translateToSeconds(inputHours, inputMinutes, inputSeconds) * inputRounds,\n          totalRestDuration: translateToSeconds(input2Hours, input2Minutes, input2Seconds) * inputRounds,\n          totalDuration: translateToSeconds(inputHours, inputMinutes, inputSeconds) * inputRounds + translateToSeconds(input2Hours, input2Minutes, input2Seconds) * inputRounds\n        }]);\n      },\n      removeTimer: index => setTimers(timers.filter((t, i) => i !== index))\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AppProvider, \"Ox78D9mHPFHdfs58mOpcHOArUD0=\", false, function () {\n  return [useInterval];\n});\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","v4","uuid","useInterval","translateToSeconds","AppContext","createContext","AppProvider","children","timers","setTimers","paused","setPaused","activeIndex","setActiveIndex","currentTime","setCurrentTime","isComplete","setIsComplete","currentRound","setCurrentRound","length","timerType","workoutRoundDuration","r","newRound","inputRounds","c","reset","fastForward","createTimer","inputHours","inputMinutes","inputSeconds","input2Hours","input2Minutes","input2Seconds","id","restRoundDuration","totalWorkoutDuration","totalRestDuration","totalDuration","removeTimer","index","filter","t","i"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/AppProvider.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useInterval } from \"./utils/hooks\";\nimport { translateToSeconds } from \"./utils/helpers\";\n\nexport const AppContext = React.createContext({});\n\nexport const AppProvider = ({ children }) => {\n\n    const [timers, setTimers] = useState([]);\n    const [paused, setPaused] = useState(true);\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [isComplete, setIsComplete] = useState(false);\n    const [currentRound, setCurrentRound] = useState(1);\n\n    useInterval(() => {\n      if (paused || activeIndex >= timers.length) return;\n\n      if (timers[activeIndex].timerType === \"Tabata\") {\n\n      };\n\n      if (currentTime === timers[activeIndex].workoutRoundDuration) {\n        setCurrentTime(0);\n        setCurrentRound(r => {\n          let newRound = r + 1;\n          if (newRound > timers[activeIndex].inputRounds) {\n            newRound = 1;\n            setActiveIndex(activeIndex => activeIndex + 1);\n          }\n          return newRound;\n        });\n      } else {\n        setCurrentTime(c => c + 1);\n      }\n\n    }, 1000);\n\n    const reset = () => {\n      setActiveIndex(0);\n      setCurrentTime(0);\n      setPaused(true);\n      setIsComplete(false);\n      setCurrentRound(1);\n    };\n\n    const fastForward = () => {\n      setActiveIndex(activeIndex + 1);\n      setCurrentTime(0);\n      setCurrentRound(timers[activeIndex].inputRounds);\n      setIsComplete(true);\n    };\n\n    return (\n      <AppContext.Provider\n        value={{\n          timers,\n          currentTime,\n          currentRound,\n          setCurrentTime,\n          activeIndex,\n          setActiveIndex,\n          paused,\n          setPaused,\n          isComplete,\n          setIsComplete,\n          reset: reset,\n          fastForward: fastForward,\n          createTimer: ({ timerType, inputHours, inputMinutes, inputSeconds, input2Hours, input2Minutes, input2Seconds, inputRounds = 1 }) => {\n            const id = uuid();\n            setTimers([...timers, { \n              id, \n              timerType, \n              inputRounds, \n              workoutRoundDuration: translateToSeconds(inputHours, inputMinutes, inputSeconds), \n              restRoundDuration: translateToSeconds(input2Hours, input2Minutes, input2Seconds), \n              totalWorkoutDuration: (translateToSeconds(inputHours, inputMinutes, inputSeconds) * inputRounds),\n              totalRestDuration: (translateToSeconds(input2Hours, input2Minutes, input2Seconds) * inputRounds),\n              totalDuration: ((translateToSeconds(inputHours, inputMinutes, inputSeconds) * inputRounds) + (translateToSeconds(input2Hours, input2Minutes, input2Seconds) * inputRounds)),\n            }]);\n          },\n          removeTimer: index => setTimers(timers.filter((t, i) => i !== index)),\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    );\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}