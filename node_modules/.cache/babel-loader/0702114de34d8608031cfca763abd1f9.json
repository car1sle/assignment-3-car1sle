{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    timers,\n    workoutIsRunning,\n    setWorkoutIsRunning,\n    currentTimerId,\n    setCurrentTimerId,\n    setWorkoutIsComplete\n  } = useContext(AppContext);\n  const {\n    id,\n    inputHours,\n    inputMinutes,\n    inputSeconds\n  } = props;\n  const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n  const isPaused = !workoutIsRunning;\n  useEffect(() => {\n    let i;\n\n    if (workoutIsRunning && currentTimerId === id) {\n      if (!isPaused) {\n        i = setInterval(() => {\n          setTime(time - 1);\n        }, 1000);\n      }\n\n      if (time === 0) {\n        clearInterval(i);\n\n        if (id === timers.length) {\n          setWorkoutIsRunning(false);\n          setWorkoutIsComplete(true);\n        } else {\n          setCurrentTimerId(currentTimerId + 1);\n        }\n      }\n    }\n\n    return () => clearInterval(i);\n  }, [time, workoutIsRunning, currentTimerId, id, setCurrentTimerId, setWorkoutIsComplete, setWorkoutIsRunning, timers]);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: translateFromSeconds(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countdown, \"cuEGhKy/8S0FzySZAH3pjPzCDyk=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","useContext","AppContext","Counter","translateFromSeconds","translateToSeconds","Countdown","props","timers","workoutIsRunning","setWorkoutIsRunning","currentTimerId","setCurrentTimerId","setWorkoutIsComplete","id","inputHours","inputMinutes","inputSeconds","time","setTime","isPaused","i","setInterval","clearInterval","length"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst Countdown = ({props}) => {\n\n    const { timers, workoutIsRunning, setWorkoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n\n    const isPaused = !workoutIsRunning;\n\n    useEffect(() => {\n\n        let i;\n\n        if (workoutIsRunning && currentTimerId === id) {\n            if (!isPaused) {\n                i = setInterval(() => {\n                    setTime(time - 1);\n                }, 1000);\n            }\n            if (time === 0) {\n                clearInterval(i);\n                if (id === timers.length) {\n                    setWorkoutIsRunning(false);\n                    setWorkoutIsComplete(true);\n                } else {\n                    setCurrentTimerId(currentTimerId + 1);\n                }\n            }\n        }\n\n        return () => clearInterval(i);\n\n    }, [time, workoutIsRunning, currentTimerId, id, setCurrentTimerId, setWorkoutIsComplete, setWorkoutIsRunning, timers]);\n\n    return (\n        <Counter>{translateFromSeconds(time)}</Counter>\n    );\n\n};\n\nexport default Countdown;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;AAEA,MAAMC,SAAS,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE3B,MAAM;IAAEC,MAAF;IAAUC,gBAAV;IAA4BC,mBAA5B;IAAiDC,cAAjD;IAAiEC,iBAAjE;IAAoFC;EAApF,IAA6GZ,UAAU,CAACC,UAAD,CAA7H;EACA,MAAM;IAAEY,EAAF;IAAMC,UAAN;IAAkBC,YAAlB;IAAgCC;EAAhC,IAAiDV,KAAvD;EAEA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACK,kBAAkB,CAACU,UAAD,EAAaC,YAAb,EAA2BC,YAA3B,CAAnB,CAAhC;EAEA,MAAMG,QAAQ,GAAG,CAACX,gBAAlB;EAEAV,SAAS,CAAC,MAAM;IAEZ,IAAIsB,CAAJ;;IAEA,IAAIZ,gBAAgB,IAAIE,cAAc,KAAKG,EAA3C,EAA+C;MAC3C,IAAI,CAACM,QAAL,EAAe;QACXC,CAAC,GAAGC,WAAW,CAAC,MAAM;UAClBH,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;QACH,CAFc,EAEZ,IAFY,CAAf;MAGH;;MACD,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACZK,aAAa,CAACF,CAAD,CAAb;;QACA,IAAIP,EAAE,KAAKN,MAAM,CAACgB,MAAlB,EAA0B;UACtBd,mBAAmB,CAAC,KAAD,CAAnB;UACAG,oBAAoB,CAAC,IAAD,CAApB;QACH,CAHD,MAGO;UACHD,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;QACH;MACJ;IACJ;;IAED,OAAO,MAAMY,aAAa,CAACF,CAAD,CAA1B;EAEH,CAvBQ,EAuBN,CAACH,IAAD,EAAOT,gBAAP,EAAyBE,cAAzB,EAAyCG,EAAzC,EAA6CF,iBAA7C,EAAgEC,oBAAhE,EAAsFH,mBAAtF,EAA2GF,MAA3G,CAvBM,CAAT;EAyBA,oBACI,QAAC,OAAD;IAAA,UAAUJ,oBAAoB,CAACc,IAAD;EAA9B;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CAtCD;;GAAMZ,S;;KAAAA,S;AAwCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}