{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport { useInterval } from '../../utils/hooks';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport Counter from '../generic/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst XY = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    index,\n    workoutDuration,\n    rounds\n  } = props;\n  const {\n    activeIndex,\n    paused,\n    setActiveIndex,\n    removeTimer\n  } = useContext(AppContext);\n  const [time, setTime] = useState(workoutDuration);\n  const [currentRound, setCurrentRounds] = useState(1);\n  const active = activeIndex === index;\n  useInterval(() => {\n    if (paused || !active) return;\n\n    if (time === 1) {\n      setActiveIndex(index + 1);\n    } else {\n      setTime(c => c - 1);\n    }\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    duration: translateFromSeconds(workoutDuration),\n    progress: active && translateFromSeconds(time),\n    removeClick: () => removeTimer(index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(XY, \"ZpUzcB1LnydX1cUy7XBlWjMvGk4=\", false, function () {\n  return [useInterval];\n});\n\n_c = XY;\nexport default XY;\n\nvar _c;\n\n$RefreshReg$(_c, \"XY\");","map":{"version":3,"names":["useContext","useState","AppContext","useInterval","translateFromSeconds","Counter","XY","props","index","workoutDuration","rounds","activeIndex","paused","setActiveIndex","removeTimer","time","setTime","currentRound","setCurrentRounds","active","c"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/XY.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport { useInterval } from '../../utils/hooks';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport Counter from '../generic/Counter';\n\nconst XY = ({ props }) => {\n\n    const { index, workoutDuration, rounds } = props;\n    const { activeIndex, paused, setActiveIndex, removeTimer } = useContext(AppContext);\n    const [time, setTime] = useState(workoutDuration);\n    const [currentRound, setCurrentRounds] = useState(1);\n    const active = activeIndex === index;\n\n    useInterval(() => {\n        if (paused || !active) return;\n\n        if (time === 1) {\n            setActiveIndex(index + 1);\n        } else {\n            setTime(c => c - 1);\n        }\n    }, 1000);\n\n    return (\n        <Counter duration={translateFromSeconds(workoutDuration)} progress={active && translateFromSeconds(time)} removeClick={() => removeTimer(index)} />\n    );\n\n};\n\nexport default XY;"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,EAAE,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAEtB,MAAM;IAAEC,KAAF;IAASC,eAAT;IAA0BC;EAA1B,IAAqCH,KAA3C;EACA,MAAM;IAAEI,WAAF;IAAeC,MAAf;IAAuBC,cAAvB;IAAuCC;EAAvC,IAAuDd,UAAU,CAACE,UAAD,CAAvE;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACQ,eAAD,CAAhC;EACA,MAAM,CAACQ,YAAD,EAAeC,gBAAf,IAAmCjB,QAAQ,CAAC,CAAD,CAAjD;EACA,MAAMkB,MAAM,GAAGR,WAAW,KAAKH,KAA/B;EAEAL,WAAW,CAAC,MAAM;IACd,IAAIS,MAAM,IAAI,CAACO,MAAf,EAAuB;;IAEvB,IAAIJ,IAAI,KAAK,CAAb,EAAgB;MACZF,cAAc,CAACL,KAAK,GAAG,CAAT,CAAd;IACH,CAFD,MAEO;MACHQ,OAAO,CAACI,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAP;IACH;EACJ,CARU,EAQR,IARQ,CAAX;EAUA,oBACI,QAAC,OAAD;IAAS,QAAQ,EAAEhB,oBAAoB,CAACK,eAAD,CAAvC;IAA0D,QAAQ,EAAEU,MAAM,IAAIf,oBAAoB,CAACW,IAAD,CAAlG;IAA0G,WAAW,EAAE,MAAMD,WAAW,CAACN,KAAD;EAAxI;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CAtBD;;GAAMF,E;UAQFH,W;;;KAREG,E;AAwBN,eAAeA,EAAf"},"metadata":{},"sourceType":"module"}