{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    timers,\n    workoutIsRunning,\n    currentTimerId,\n    setCurrentTimerId,\n    setWorkoutIsComplete\n  } = useContext(AppContext);\n  const {\n    id,\n    inputHours,\n    inputMinutes,\n    inputSeconds\n  } = props;\n  const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n  const [isRunning, setIsRunning] = useState(workoutIsRunning);\n  useEffect(() => {\n    if (workoutIsRunning) {\n      let i;\n\n      if (isRunning && currentTimerId === id) {\n        i = setInterval(() => {\n          setTime(time - 1);\n        }, 1000);\n\n        if (time === 0) {\n          clearInterval(i);\n          setIsRunning(false);\n\n          if (id < timers.length) {\n            setCurrentTimerId(currentTimerId + 1);\n          }\n        }\n      }\n\n      return () => {\n        clearInterval(i);\n\n        if (id === timers.length) {\n          setWorkoutIsComplete(true);\n        }\n      };\n    }\n  }, [time, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]);\n  const displayTime = id < currentTimerId ? '00:00:00' : translateFromSeconds(time);\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    children: displayTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countdown, \"tjfHlRqTyfg7R3t4G4/yFt5WbxA=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","useContext","AppContext","Counter","translateFromSeconds","translateToSeconds","Countdown","props","timers","workoutIsRunning","currentTimerId","setCurrentTimerId","setWorkoutIsComplete","id","inputHours","inputMinutes","inputSeconds","time","setTime","isRunning","setIsRunning","i","setInterval","clearInterval","length","displayTime"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport Counter from '../generic/Counter';\nimport { translateFromSeconds, translateToSeconds } from '../../utils/helpers';\n\nconst Countdown = ({props}) => {\n\n    const { timers, workoutIsRunning, currentTimerId, setCurrentTimerId, setWorkoutIsComplete } = useContext(AppContext);\n    const { id, inputHours, inputMinutes, inputSeconds } = props;\n\n    const [time, setTime] = useState(translateToSeconds(inputHours, inputMinutes, inputSeconds));\n    const [isRunning, setIsRunning] = useState(workoutIsRunning);\n\n    useEffect(() => {\n\n        if (workoutIsRunning) {\n\n        let i;\n\n        if (isRunning && currentTimerId === id) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                clearInterval(i);\n                setIsRunning(false);\n                if (id < timers.length) {\n                    setCurrentTimerId(currentTimerId + 1);\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(i);\n            if (id === timers.length) {\n                setWorkoutIsComplete(true);\n            }\n        }\n\n        }\n\n    }, [time, isRunning, currentTimerId, id, setCurrentTimerId, timers, setWorkoutIsComplete]);\n\n    const displayTime = (id < currentTimerId) ? '00:00:00' : translateFromSeconds(time);\n\n    return (\n\n        <Counter>{displayTime}</Counter>\n    );\n\n};\n\nexport default Countdown;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;;;AAEA,MAAMC,SAAS,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE3B,MAAM;IAAEC,MAAF;IAAUC,gBAAV;IAA4BC,cAA5B;IAA4CC,iBAA5C;IAA+DC;EAA/D,IAAwFX,UAAU,CAACC,UAAD,CAAxG;EACA,MAAM;IAAEW,EAAF;IAAMC,UAAN;IAAkBC,YAAlB;IAAgCC;EAAhC,IAAiDT,KAAvD;EAEA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACK,kBAAkB,CAACS,UAAD,EAAaC,YAAb,EAA2BC,YAA3B,CAAnB,CAAhC;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAACS,gBAAD,CAA1C;EAEAV,SAAS,CAAC,MAAM;IAEZ,IAAIU,gBAAJ,EAAsB;MAEtB,IAAIY,CAAJ;;MAEA,IAAIF,SAAS,IAAIT,cAAc,KAAKG,EAApC,EAAwC;QACpCQ,CAAC,GAAGC,WAAW,CAAC,MAAM;UAClBJ,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;QACH,CAFc,EAEZ,IAFY,CAAf;;QAGA,IAAIA,IAAI,KAAK,CAAb,EAAgB;UACZM,aAAa,CAACF,CAAD,CAAb;UACAD,YAAY,CAAC,KAAD,CAAZ;;UACA,IAAIP,EAAE,GAAGL,MAAM,CAACgB,MAAhB,EAAwB;YACpBb,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;UACH;QACJ;MACJ;;MAED,OAAO,MAAM;QACTa,aAAa,CAACF,CAAD,CAAb;;QACA,IAAIR,EAAE,KAAKL,MAAM,CAACgB,MAAlB,EAA0B;UACtBZ,oBAAoB,CAAC,IAAD,CAApB;QACH;MACJ,CALD;IAOC;EAEJ,CA5BQ,EA4BN,CAACK,IAAD,EAAOE,SAAP,EAAkBT,cAAlB,EAAkCG,EAAlC,EAAsCF,iBAAtC,EAAyDH,MAAzD,EAAiEI,oBAAjE,CA5BM,CAAT;EA8BA,MAAMa,WAAW,GAAIZ,EAAE,GAAGH,cAAN,GAAwB,UAAxB,GAAqCN,oBAAoB,CAACa,IAAD,CAA7E;EAEA,oBAEI,QAAC,OAAD;IAAA,UAAUQ;EAAV;IAAA;IAAA;IAAA;EAAA,QAFJ;AAKH,CA7CD;;GAAMnB,S;;KAAAA,S;AA+CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}