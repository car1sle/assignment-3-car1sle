{"ast":null,"code":"var _jsxFileName = \"/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Tabata.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport { useInterval } from '../../utils/hooks';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport Counter from '../generic/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tabata = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    index,\n    workoutDuration\n  } = props;\n  const {\n    activeIndex,\n    paused,\n    setActiveIndex,\n    removeTimer\n  } = useContext(AppContext);\n  const [time, setTime] = useState(workoutDuration);\n  const active = activeIndex === index;\n  useEffect(() => {\n    let i;\n    let i2;\n\n    if (workoutIsRunning && currentTimerId === id) {\n      i = setInterval(() => {\n        setTime(time - 1);\n      }, 1000);\n\n      if (time === 0) {\n        if (time2 !== 0) {\n          i2 = setInterval(() => {\n            setTime2(time2 - 1);\n          }, 1000);\n          clearInterval(i);\n        } else if (currentRound === inputRounds) {\n          clearInterval(i);\n          clearInterval(i2);\n\n          if (id === timers.length) {\n            setWorkoutIsRunning(false);\n            setWorkoutIsComplete(true);\n          } else {\n            setCurrentTimerId(currentTimerId + 1);\n          }\n        } else {\n          setTime(inputTime);\n          setTime2(input2Time);\n          setCurrentRound(currentRound + 1);\n        }\n      }\n    }\n\n    return () => {\n      clearInterval(i);\n      clearInterval(i2);\n    };\n  }, [time, time2, inputTime, input2Time, workoutIsRunning, currentRound, currentTimerId, id, setCurrentTimerId, setWorkoutIsComplete, setWorkoutIsRunning, timers, inputRounds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"75px\",\n          textAlign: \"right\"\n        },\n        children: \"Workout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        children: translateFromSeconds(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"75px\",\n          textAlign: \"right\"\n        },\n        children: \"Rest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {\n        children: translateFromSeconds(time2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"15px 0 20px\",\n        fontStyle: \"italic\"\n      },\n      children: [\"Round \", currentRound, \" of \", inputRounds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tabata, \"V0NgT1GCdqhFSvn+H+7Ja1kZjMs=\");\n\n_c = Tabata;\nexport default Tabata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useContext","useState","AppContext","useInterval","translateFromSeconds","Counter","Tabata","props","index","workoutDuration","activeIndex","paused","setActiveIndex","removeTimer","time","setTime","active","useEffect","i","i2","workoutIsRunning","currentTimerId","id","setInterval","time2","setTime2","clearInterval","currentRound","inputRounds","timers","length","setWorkoutIsRunning","setWorkoutIsComplete","setCurrentTimerId","inputTime","input2Time","setCurrentRound","textAlign","display","justifyContent","alignItems","width","margin","fontStyle"],"sources":["/Users/carlyciricillo/Documents/HES/Design Principles in React/assignment-2-car1sle/src/components/timers/Tabata.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { AppContext } from '../../AppProvider';\nimport { useInterval } from '../../utils/hooks';\nimport { translateFromSeconds } from '../../utils/helpers';\nimport Counter from '../generic/Counter';\n\nconst Tabata = ({props}) => {\n\n    const { index, workoutDuration } = props;\n    const { activeIndex, paused, setActiveIndex, removeTimer } = useContext(AppContext);\n    const [time, setTime] = useState(workoutDuration);\n    const active = activeIndex === index;\n\n    useEffect(() => {\n\n        let i;\n        let i2;\n\n        if (workoutIsRunning && currentTimerId === id) {\n            i = setInterval(() => {\n                setTime(time - 1);\n            }, 1000);\n            if (time === 0) {\n                if (time2 !== 0) {\n                    i2 = setInterval(() => {\n                        setTime2(time2 - 1);\n                    }, 1000);\n                    clearInterval(i);\n                } else if (currentRound === inputRounds) {\n                    clearInterval(i);\n                    clearInterval(i2);\n                    if (id === timers.length) {\n                        setWorkoutIsRunning(false);\n                        setWorkoutIsComplete(true);\n                    } else {\n                        setCurrentTimerId(currentTimerId + 1);\n                    }\n                } else {\n                    setTime(inputTime);\n                    setTime2(input2Time);\n                    setCurrentRound(currentRound + 1);\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(i);\n            clearInterval(i2);\n        };\n\n    }, [time, time2, inputTime, input2Time, workoutIsRunning, currentRound, currentTimerId, id, setCurrentTimerId, setWorkoutIsComplete, setWorkoutIsRunning, timers, inputRounds ]);\n\n    return (\n        <div style={{ textAlign: \"center\",}}>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                <div style={{ width: \"75px\", textAlign: \"right\"}}>Workout:</div>\n                <Counter>{translateFromSeconds(time)}</Counter>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\",}}>\n                <div style={{ width: \"75px\", textAlign: \"right\"}}>Rest:</div>\n                <Counter>{translateFromSeconds(time2)}</Counter>\n            </div>\n            <div style={{ margin: \"15px 0 20px\", fontStyle: \"italic\",}}>Round {currentRound} of {inputRounds}</div>\n        </div>\n    );\n\n};\n\nexport default Tabata;\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,MAAM,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAExB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAA6BF,KAAnC;EACA,MAAM;IAAEG,WAAF;IAAeC,MAAf;IAAuBC,cAAvB;IAAuCC;EAAvC,IAAuDb,UAAU,CAACE,UAAD,CAAvE;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACQ,eAAD,CAAhC;EACA,MAAMO,MAAM,GAAGN,WAAW,KAAKF,KAA/B;EAEAS,SAAS,CAAC,MAAM;IAEZ,IAAIC,CAAJ;IACA,IAAIC,EAAJ;;IAEA,IAAIC,gBAAgB,IAAIC,cAAc,KAAKC,EAA3C,EAA+C;MAC3CJ,CAAC,GAAGK,WAAW,CAAC,MAAM;QAClBR,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACH,CAFc,EAEZ,IAFY,CAAf;;MAGA,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACZ,IAAIU,KAAK,KAAK,CAAd,EAAiB;UACbL,EAAE,GAAGI,WAAW,CAAC,MAAM;YACnBE,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;UACH,CAFe,EAEb,IAFa,CAAhB;UAGAE,aAAa,CAACR,CAAD,CAAb;QACH,CALD,MAKO,IAAIS,YAAY,KAAKC,WAArB,EAAkC;UACrCF,aAAa,CAACR,CAAD,CAAb;UACAQ,aAAa,CAACP,EAAD,CAAb;;UACA,IAAIG,EAAE,KAAKO,MAAM,CAACC,MAAlB,EAA0B;YACtBC,mBAAmB,CAAC,KAAD,CAAnB;YACAC,oBAAoB,CAAC,IAAD,CAApB;UACH,CAHD,MAGO;YACHC,iBAAiB,CAACZ,cAAc,GAAG,CAAlB,CAAjB;UACH;QACJ,CATM,MASA;UACHN,OAAO,CAACmB,SAAD,CAAP;UACAT,QAAQ,CAACU,UAAD,CAAR;UACAC,eAAe,CAACT,YAAY,GAAG,CAAhB,CAAf;QACH;MACJ;IACJ;;IAED,OAAO,MAAM;MACTD,aAAa,CAACR,CAAD,CAAb;MACAQ,aAAa,CAACP,EAAD,CAAb;IACH,CAHD;EAKH,CArCQ,EAqCN,CAACL,IAAD,EAAOU,KAAP,EAAcU,SAAd,EAAyBC,UAAzB,EAAqCf,gBAArC,EAAuDO,YAAvD,EAAqEN,cAArE,EAAqFC,EAArF,EAAyFW,iBAAzF,EAA4GD,oBAA5G,EAAkID,mBAAlI,EAAuJF,MAAvJ,EAA+JD,WAA/J,CArCM,CAAT;EAuCA,oBACI;IAAK,KAAK,EAAE;MAAES,SAAS,EAAE;IAAb,CAAZ;IAAA,wBACI;MAAK,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAX;QAAmBC,cAAc,EAAE,QAAnC;QAA6CC,UAAU,EAAE;MAAzD,CAAZ;MAAA,wBACI;QAAK,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAT;UAAiBJ,SAAS,EAAE;QAA5B,CAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,OAAD;QAAA,UAAUjC,oBAAoB,CAACU,IAAD;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,KAAK,EAAE;QAAEwB,OAAO,EAAE,MAAX;QAAmBC,cAAc,EAAE,QAAnC;QAA6CC,UAAU,EAAE;MAAzD,CAAZ;MAAA,wBACI;QAAK,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAT;UAAiBJ,SAAS,EAAE;QAA5B,CAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,OAAD;QAAA,UAAUjC,oBAAoB,CAACoB,KAAD;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eASI;MAAK,KAAK,EAAE;QAAEkB,MAAM,EAAE,aAAV;QAAyBC,SAAS,EAAE;MAApC,CAAZ;MAAA,qBAAmEhB,YAAnE,UAAqFC,WAArF;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CA5DD;;GAAMtB,M;;KAAAA,M;AA8DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}